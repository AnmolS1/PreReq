[
	{
		"name": "CSE 3",
		"description": "Introduces the concepts and skills necessary to effectively use information technology. Includes basic concepts and some practical skills with computer and networks.",
		"prerequisite": "None."
	},
	{
		"name": "Fluency in Information Technology",
		"description": "Introduces the concepts and skills necessary to effectively use information technology. Includes basic concepts and some practical skills with computer and networks.",
		"prerequisite": "None."
	},
	{
		"name": "CSE 4GS",
		"description": "Exploration of topics in mathematics and engineering as they relate to classical architecture in Rome, Italy. In depth geometrical analysis and computer modeling of basic structures , and on-site studies of the Colosseum, Pantheon, Roman Forum, and St. Peter’s Basilica.",
		"prerequisite": "MATH 10A or MATH 20A; department approval, and corequisite of CSE 6GS."
	},
	{
		"name": "Mathematical Beauty in Rome",
		"description": "Exploration of topics in mathematics and engineering as they relate to classical architecture in Rome, Italy. In depth geometrical analysis and computer modeling of basic structures , and on-site studies of the Colosseum, Pantheon, Roman Forum, and St. Peter’s Basilica.",
		"prerequisite": "MATH 10A or MATH 20A; department approval, and corequisite of CSE 6GS."
	},
	{
		"name": "CSE 6GS",
		"description": "Companion course to CSE 4GS where theory is applied and lab experiments are carried out “in the field” in Rome, Italy. For final projects, students will select a complex structure  to analyze and model, in detail, using computer-based tools.",
		"prerequisite": "MATH 10A or MATH 20A; department approval, and corequisite of CSE 4GS."
	},
	{
		"name": "Mathematical Beauty in Rome Lab",
		"description": "Companion course to CSE 4GS where theory is applied and lab experiments are carried out “in the field” in Rome, Italy. For final projects, students will select a complex structure  to analyze and model, in detail, using computer-based tools.",
		"prerequisite": "MATH 10A or MATH 20A; department approval, and corequisite of CSE 4GS."
	},
	{
		"name": "CSE 8A",
		"description": "Introductory course for students interested in computer science and programming. Basics of programming including variables, conditionals, loops, functions/methods. Structured data storage such as arrays/lists and dictionaries, including data mutation. Hands-on experience with designing, writing, hand-tracing, compiling or interpreting, executing, testing, and debugging programs. Students solve relevant computational problems using a high-level programming language. CSE 8A is part of a two-course sequence  that is equivalent to CSE 11. Students should take CSE 8B to complete the CSE 8A-B track. Students who have taken CSE 8B or CSE 11 may not take or receive credit for CSE 8A. Students may receive credit for one of the following: COGS 18, CSE 8A, or CSE 6R. Recommended preparation: No prior programming experience is assumed, but comfort using computers is helpful. Students should consult the “CSE Course Placement Advice” web page for assistance in choosing which CSE course to take first.",
		"prerequisite": "Restricted to undergraduates. Graduate students will be allowed as space permits."
	},
	{
		"name": "Introduction to Programming and Computational Problem-Solving I",
		"description": "Introductory course for students interested in computer science and programming. Basics of programming including variables, conditionals, loops, functions/methods. Structured data storage such as arrays/lists and dictionaries, including data mutation. Hands-on experience with designing, writing, hand-tracing, compiling or interpreting, executing, testing, and debugging programs. Students solve relevant computational problems using a high-level programming language. CSE 8A is part of a two-course sequence  that is equivalent to CSE 11. Students should take CSE 8B to complete the CSE 8A-B track. Students who have taken CSE 8B or CSE 11 may not take or receive credit for CSE 8A. Students may receive credit for one of the following: COGS 18, CSE 8A, or CSE 6R. Recommended preparation: No prior programming experience is assumed, but comfort using computers is helpful. Students should consult the “CSE Course Placement Advice” web page for assistance in choosing which CSE course to take first.",
		"prerequisite": "Restricted to undergraduates. Graduate students will be allowed as space permits."
	},
	{
		"name": "CSE 8B",
		"description": "Introductory programming using an object-oriented approach with the Java programming language. Builds on basic programming constructs introduced in CSE 8A to introduce class design and use, interfaces, basic class hierarchies, recursion, event-based programming, error reporting with exceptions, and file I/O. Basics of command-line navigation for file management and running programs. Development, testing, and debugging of more complex programs. CSE 8B is part of a two-course sequence  that is equivalent to CSE 11. No credit offered for CSE 8B if CSE 11 taken previously. Students may not receive credit for CSE 8B and CSE 11. Students should consult the “CSE Course Placement Advice” web page for assistance in choosing which CSE course to take first",
		"prerequisite": "CSE 8A; restricted to undergraduates. Graduate students will be allowed as space permits."
	},
	{
		"name": "Introduction to Programming and Computational Problem-Solving II",
		"description": "Introductory programming using an object-oriented approach with the Java programming language. Builds on basic programming constructs introduced in CSE 8A to introduce class design and use, interfaces, basic class hierarchies, recursion, event-based programming, error reporting with exceptions, and file I/O. Basics of command-line navigation for file management and running programs. Development, testing, and debugging of more complex programs. CSE 8B is part of a two-course sequence  that is equivalent to CSE 11. No credit offered for CSE 8B if CSE 11 taken previously. Students may not receive credit for CSE 8B and CSE 11. Students should consult the “CSE Course Placement Advice” web page for assistance in choosing which CSE course to take first",
		"prerequisite": "CSE 8A; restricted to undergraduates. Graduate students will be allowed as space permits."
	},
	{
		"name": "CSE 11",
		"description": "Accelerated introductory programming including an object-oriented approach. Covers basic programming topics from CSE 8A including variables, conditionals, loops, functions/methods, structured data storage, and mutation. Also covers topics from CSE 8B including the Java programming language, class design, interfaces, basic class hierarchies, recursion, event-based programming, and file I/O. Basics of command-line navigation for file management and running programs. Zero units of credit offered for CSE 11 if CSE 8B taken previously or concurrently. Recommended preparation: Significant prior programming experience . Students should consult the “CSE Course Placement Advice” web page for assistance in choosing a first CSE course.",
		"prerequisite": "Restricted to undergraduates. Graduate students will be allowed as space permits."
	},
	{
		"name": "Introduction to Programming and Computational Problem-Solving: Accelerated Pace",
		"description": "Accelerated introductory programming including an object-oriented approach. Covers basic programming topics from CSE 8A including variables, conditionals, loops, functions/methods, structured data storage, and mutation. Also covers topics from CSE 8B including the Java programming language, class design, interfaces, basic class hierarchies, recursion, event-based programming, and file I/O. Basics of command-line navigation for file management and running programs. Zero units of credit offered for CSE 11 if CSE 8B taken previously or concurrently. Recommended preparation: Significant prior programming experience . Students should consult the “CSE Course Placement Advice” web page for assistance in choosing a first CSE course.",
		"prerequisite": "Restricted to undergraduates. Graduate students will be allowed as space permits."
	},
	{
		"name": "CSE 12",
		"description": "Use and implementation of basic data structures including linked lists, stacks, and queues. Use of advanced structures such as binary trees and hash tables. Object-oriented design including interfaces, polymorphism, encapsulation, abstract data types, pre-/post-conditions. Recursion. Uses Java and Java Collections.",
		"prerequisite": "CSE 8B or CSE 11, and concurrent enrollment with CSE 15L; restricted to undergraduates. Graduate students will be allowed as space permits."
	},
	{
		"name": "Basic Data Structures and Object-Oriented Design",
		"description": "Use and implementation of basic data structures including linked lists, stacks, and queues. Use of advanced structures such as binary trees and hash tables. Object-oriented design including interfaces, polymorphism, encapsulation, abstract data types, pre-/post-conditions. Recursion. Uses Java and Java Collections.",
		"prerequisite": "CSE 8B or CSE 11, and concurrent enrollment with CSE 15L; restricted to undergraduates. Graduate students will be allowed as space permits."
	},
	{
		"name": "CSE 15L",
		"description": "Hands-on exploration of software development tools and techniques. Investigation of the scientific process as applied to software development and debugging. Emphasis is on weekly hands-on laboratory experiences, development of laboratory notebooking techniques as applied to software design.",
		"prerequisite": "CSE 8B or CSE 11, and concurrent enrollment with CSE 12; restricted to undergraduates. Graduate students will be allowed as space permits."
	},
	{
		"name": "Software Tools and Techniques Laboratory",
		"description": "Hands-on exploration of software development tools and techniques. Investigation of the scientific process as applied to software development and debugging. Emphasis is on weekly hands-on laboratory experiences, development of laboratory notebooking techniques as applied to software design.",
		"prerequisite": "CSE 8B or CSE 11, and concurrent enrollment with CSE 12; restricted to undergraduates. Graduate students will be allowed as space permits."
	},
	{
		"name": "CSE 20",
		"description": "Basic discrete mathematical structures: sets, relations, functions, sequences, equivalence relations, partial orders, and number systems. Methods of reasoning and proofs: prepositional logic, predicate logic, induction, recursion, and pigeonhole principle. Infinite sets and diagonalization. Basic counting techniques; permutation and combinations. Applications will be given to digital logic design, elementary number theory, design of programs, and proofs of program correctness. Students who have completed MATH 109 may not receive credit for CSE 20. Credit not offered for both MATH 15A and CSE 20. Equivalent to MATH 15A.",
		"prerequisite": "COGS 7 or CSE 8B or CSE 11. Prerequisite courses must have been completed with a grade of C– or better; restricted to undergraduates. Graduate students will be allowed as space permits."
	},
	{
		"name": "Discrete Mathematics",
		"description": "Basic discrete mathematical structures: sets, relations, functions, sequences, equivalence relations, partial orders, and number systems. Methods of reasoning and proofs: prepositional logic, predicate logic, induction, recursion, and pigeonhole principle. Infinite sets and diagonalization. Basic counting techniques; permutation and combinations. Applications will be given to digital logic design, elementary number theory, design of programs, and proofs of program correctness. Students who have completed MATH 109 may not receive credit for CSE 20. Credit not offered for both MATH 15A and CSE 20. Equivalent to MATH 15A.",
		"prerequisite": "COGS 7 or CSE 8B or CSE 11. Prerequisite courses must have been completed with a grade of C– or better; restricted to undergraduates. Graduate students will be allowed as space permits."
	},
	{
		"name": "CSE 21",
		"description": "This course will provide an introduction to the discrete mathematical tools needed to analyze algorithms and systems. Enumerative combinatorics: basic counting principles, inclusion-exclusion, and generating functions. Matrix notation. Applied discrete probability. Finite automata.",
		"prerequisite": "CSE 20 or MATH 15A; restricted to undergraduates. Graduate students will be allowed as space permits."
	},
	{
		"name": "Mathematics for Algorithms and Systems",
		"description": "This course will provide an introduction to the discrete mathematical tools needed to analyze algorithms and systems. Enumerative combinatorics: basic counting principles, inclusion-exclusion, and generating functions. Matrix notation. Applied discrete probability. Finite automata.",
		"prerequisite": "CSE 20 or MATH 15A; restricted to undergraduates. Graduate students will be allowed as space permits."
	},
	{
		"name": "CSE 30",
		"description": "Introduction to organization of modern digital computers—understanding the various components of a computer and their interrelationships. Study of a specific architecture/machine with emphasis on systems programming in C and Assembly languages in a UNIX environment.",
		"prerequisite": "CSE 12 and CSE 15L; restricted to undergraduates. Graduate students will be allowed as space permits."
	},
	{
		"name": "Computer Organization and Systems Programming",
		"description": "Introduction to organization of modern digital computers—understanding the various components of a computer and their interrelationships. Study of a specific architecture/machine with emphasis on systems programming in C and Assembly languages in a UNIX environment.",
		"prerequisite": "CSE 12 and CSE 15L; restricted to undergraduates. Graduate students will be allowed as space permits."
	},
	{
		"name": "CSE 42",
		"description": "This course allows students to use what they learned in introductory programming courses to make things happen in the real world. Working in teams, students will first learn to program Arduino-based devices. Teams of students will design a custom device and program it to do their bidding. This course is targeted to first-year students and sophomores in engineering and science disciplines who want to practice applying what they have learned in a programming class and to have the chance to program things other than computers. Program or materials fees may apply.",
		"prerequisite": "Restricted to first-year and sophomore students; instructor approval required."
	},
	{
		"name": "Building and Programming Electronic Devices",
		"description": "This course allows students to use what they learned in introductory programming courses to make things happen in the real world. Working in teams, students will first learn to program Arduino-based devices. Teams of students will design a custom device and program it to do their bidding. This course is targeted to first-year students and sophomores in engineering and science disciplines who want to practice applying what they have learned in a programming class and to have the chance to program things other than computers. Program or materials fees may apply.",
		"prerequisite": "Restricted to first-year and sophomore students; instructor approval required."
	},
	{
		"name": "CSE 86",
		"description": "Helps the Java programmer to be productive in the C++ programming environment. Topics include the similarities and differences between Java and C++ with special attention to pointers, operator overloading, templates, the STL, the preprocessor, and the C++ Runtime Environment.",
		"prerequisite": "CSE 12 or consent of instructor."
	},
	{
		"name": "C++ for Java Programmers",
		"description": "Helps the Java programmer to be productive in the C++ programming environment. Topics include the similarities and differences between Java and C++ with special attention to pointers, operator overloading, templates, the STL, the preprocessor, and the C++ Runtime Environment.",
		"prerequisite": "CSE 12 or consent of instructor."
	},
	{
		"name": "CSE 87",
		"description": "The First-year Student Seminar Program is designed to provide new students with the opportunity to explore an intellectual topic with a faculty member in a small seminar setting. First-year student seminars are offered in all campus departments and undergraduate colleges, and topics vary from quarter to quarter. Enrollment is limited to fifteen to twenty students, with preference given to entering first-year students.",
		"prerequisite": "None."
	},
	{
		"name": "First-year Student Seminar",
		"description": "The First-year Student Seminar Program is designed to provide new students with the opportunity to explore an intellectual topic with a faculty member in a small seminar setting. First-year student seminars are offered in all campus departments and undergraduate colleges, and topics vary from quarter to quarter. Enrollment is limited to fifteen to twenty students, with preference given to entering first-year students.",
		"prerequisite": "None."
	},
	{
		"name": "CSE 90",
		"description": "A seminar providing an overview of a topic of current research interest to the instructor. The goal is to present a specialized topic in computer science and engineering students. May be taken for credit three times when topics vary.",
		"prerequisite": "None."
	},
	{
		"name": "Undergraduate Seminar",
		"description": "A seminar providing an overview of a topic of current research interest to the instructor. The goal is to present a specialized topic in computer science and engineering students. May be taken for credit three times when topics vary.",
		"prerequisite": "None."
	},
	{
		"name": "CSE 91",
		"description": "A seminar format discussion led by CSE faculty on topics in central areas of computer science, concentrating on the relation among them, recent developments, and future directions.",
		"prerequisite": "Majors only."
	},
	{
		"name": "Perspectives in Computer Science and Engineering",
		"description": "A seminar format discussion led by CSE faculty on topics in central areas of computer science, concentrating on the relation among them, recent developments, and future directions.",
		"prerequisite": "Majors only."
	},
	{
		"name": "CSE 99",
		"description": "Independent reading or research by special arrangement with a faculty member.",
		"prerequisite": "Lower-division standing. Completion of thirty units at UC San Diego with a UC San Diego GPA of 3.0. Special Studies form required. Department stamp required. Consent of instructor and approval of the department."
	},
	{
		"name": "Independent Study in Computer Science and Engineering",
		"description": "Independent reading or research by special arrangement with a faculty member.",
		"prerequisite": "Lower-division standing. Completion of thirty units at UC San Diego with a UC San Diego GPA of 3.0. Special Studies form required. Department stamp required. Consent of instructor and approval of the department."
	},
	{
		"name": "CSE 100",
		"description": "High-performance data structures and supporting algorithms. Use and implementation of data structures like balanced trees, graphs, priority queues, and hash tables. Also, memory management, pointers, recursion. Theoretical and practical performance analysis, both average case and amortized. Uses C++ and STL. Credit not offered for both MATH 176 and CSE 100. Equivalent to MATH 176. Recommended preparation: background in C or C++ programming.",
		"prerequisite": "CSE 12 and CSE 15L and CSE 21 or MATH 154 or MATH 184A and CSE 5A or CSE 30 or ECE 15 or MAE 9; restricted to undergraduates. Graduate students will be allowed as space permits."
	},
	{
		"name": "Advanced Data Structures",
		"description": "High-performance data structures and supporting algorithms. Use and implementation of data structures like balanced trees, graphs, priority queues, and hash tables. Also, memory management, pointers, recursion. Theoretical and practical performance analysis, both average case and amortized. Uses C++ and STL. Credit not offered for both MATH 176 and CSE 100. Equivalent to MATH 176. Recommended preparation: background in C or C++ programming.",
		"prerequisite": "CSE 12 and CSE 15L and CSE 21 or MATH 154 or MATH 184A and CSE 5A or CSE 30 or ECE 15 or MAE 9; restricted to undergraduates. Graduate students will be allowed as space permits."
	},
	{
		"name": "CSE 101",
		"description": "Design and analysis of efficient algorithms with emphasis of nonnumerical algorithms such as sorting, searching, pattern matching, and graph and network algorithms. Measuring complexity of algorithms, time and storage. NP-complete problems.",
		"prerequisite": "CSE 100 or MATH 176; restricted to undergraduates. Graduate students will be allowed as space permits."
	},
	{
		"name": "Design and Analysis of Algorithms",
		"description": "Design and analysis of efficient algorithms with emphasis of nonnumerical algorithms such as sorting, searching, pattern matching, and graph and network algorithms. Measuring complexity of algorithms, time and storage. NP-complete problems.",
		"prerequisite": "CSE 100 or MATH 176; restricted to undergraduates. Graduate students will be allowed as space permits."
	},
	{
		"name": "CSE 103",
		"description": "Distributions over the real line. Independence, expectation, conditional expectation, mean, variance. Hypothesis testing. Learning classifiers. Distributions over R^n, covariance matrix. Binomial, Poisson distributions. Chernoff bound. Entropy. Compression. Arithmetic coding. Maximal likelihood estimation. Bayesian estimation. CSE 103 is not duplicate credit for ECE 109, ECON 120A, or MATH 183.",
		"prerequisite": "MATH 20A-B and MATH 184A or CSE 21 or MATH 154; restricted to CS25, CS26, CS27, and CS28 majors. Other students will be allowed as space permits."
	},
	{
		"name": "A Practical Introduction to Probability and Statistics",
		"description": "Distributions over the real line. Independence, expectation, conditional expectation, mean, variance. Hypothesis testing. Learning classifiers. Distributions over R^n, covariance matrix. Binomial, Poisson distributions. Chernoff bound. Entropy. Compression. Arithmetic coding. Maximal likelihood estimation. Bayesian estimation. CSE 103 is not duplicate credit for ECE 109, ECON 120A, or MATH 183.",
		"prerequisite": "MATH 20A-B and MATH 184A or CSE 21 or MATH 154; restricted to CS25, CS26, CS27, and CS28 majors. Other students will be allowed as space permits."
	},
	{
		"name": "CSE 105",
		"description": "An introduction to the mathematical theory of computability. Formal languages. Finite automata and regular expression. Push-down automata and context-free languages. Computable or recursive functions: Turing machines, the halting problem. Undecidability. Credit not offered for both MATH 166 and CSE 105. Equivalent to MATH 166.",
		"prerequisite": "and  and  and ; restricted to students with sophomore, junior, or senior standing. Graduate students will be allowed as space permits."
	},
	{
		"name": "Theory of Computability",
		"description": "An introduction to the mathematical theory of computability. Formal languages. Finite automata and regular expression. Push-down automata and context-free languages. Computable or recursive functions: Turing machines, the halting problem. Undecidability. Credit not offered for both MATH 166 and CSE 105. Equivalent to MATH 166.",
		"prerequisite": "and  and  and ; restricted to students with sophomore, junior, or senior standing. Graduate students will be allowed as space permits."
	},
	{
		"name": "CSE 106",
		"description": "One frequently deals with problems in engineering, data science, business, economics, and other disciplines for which algorithmic solutions that optimize a given quantity under constraints are desired. This course is an introduction to the models, theory, methods, and applications of discrete and continuous optimization. Topics include shortest paths, flows, linear, integer, and convex programming, and continuous optimization techniques such as steepest descent and Lagrange multipliers.",
		"prerequisite": "MATH 18 or MATH 31AH and MATH 20C or MATH 31BH and CSE 21 or DSC 40B or MATH 154 or MATH 184A."
	},
	{
		"name": "Discrete and Continuous Optimization",
		"description": "One frequently deals with problems in engineering, data science, business, economics, and other disciplines for which algorithmic solutions that optimize a given quantity under constraints are desired. This course is an introduction to the models, theory, methods, and applications of discrete and continuous optimization. Topics include shortest paths, flows, linear, integer, and convex programming, and continuous optimization techniques such as steepest descent and Lagrange multipliers.",
		"prerequisite": "MATH 18 or MATH 31AH and MATH 20C or MATH 31BH and CSE 21 or DSC 40B or MATH 154 or MATH 184A."
	},
	{
		"name": "CSE 107",
		"description": "Topics include private and public-key cryptography, block ciphers, data encryption, authentication, key distribution and certification, pseudorandom number generators, design and analysis of protocols, zero-knowledge proofs, and advanced protocols. Emphasizes rigorous mathematical approach including formal definitions of security goals and proofs of protocol security.",
		"prerequisite": "and CSE 101 and CSE 105; restricted to students within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Introduction to Modern Cryptography",
		"description": "Topics include private and public-key cryptography, block ciphers, data encryption, authentication, key distribution and certification, pseudorandom number generators, design and analysis of protocols, zero-knowledge proofs, and advanced protocols. Emphasizes rigorous mathematical approach including formal definitions of security goals and proofs of protocol security.",
		"prerequisite": "and CSE 101 and CSE 105; restricted to students within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 110",
		"description": "Introduction to software development and engineering methods, including specification, design, implementation, testing, and process. An emphasis on team development, agile methods, and use of tools such as IDE’s, version control, and test harnesses.",
		"prerequisite": "CSE 100; restricted to students with junior or senior standing within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Software Engineering",
		"description": "Introduction to software development and engineering methods, including specification, design, implementation, testing, and process. An emphasis on team development, agile methods, and use of tools such as IDE’s, version control, and test harnesses.",
		"prerequisite": "CSE 100; restricted to students with junior or senior standing within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 112",
		"description": "This course will cover software engineering topics associated with large systems development such as requirements and specifications, testing and maintenance, and design. Specific attention will be given to development tools and automated support environments.",
		"prerequisite": "CSE 110; restricted to students within the CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Advanced Software Engineering",
		"description": "This course will cover software engineering topics associated with large systems development such as requirements and specifications, testing and maintenance, and design. Specific attention will be given to development tools and automated support environments.",
		"prerequisite": "CSE 110; restricted to students within the CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 113",
		"description": "Errors, resulting in defects and ultimately system failure, occur in engineering and also other areas such as medical care. The ways in which failures occur, and the means for their prevention, mitigation, and management, will be studied. Emphasis will be on software systems but also include the study of practice of other areas.",
		"prerequisite": "CSE 12 and CSE 21."
	},
	{
		"name": "Errors, Defects, and Failures",
		"description": "Errors, resulting in defects and ultimately system failure, occur in engineering and also other areas such as medical care. The ways in which failures occur, and the means for their prevention, mitigation, and management, will be studied. Emphasis will be on software systems but also include the study of practice of other areas.",
		"prerequisite": "CSE 12 and CSE 21."
	},
	{
		"name": "CSE 118",
		"description": "Explores emerging opportunities enabled by cheap sensors and networked computing devices. Small research projects will be conducted in teams, culminating in project presentations at the end of the term. Section will cover material relevant to the project, such as research methods, software engineering, teamwork, and project management.",
		"prerequisite": "Any course from the following: CSE 131, CSE 132B, COGS 102C, COGS 121, COGS 184, COMT 111B, COMT 115, ECE 111, ECE 118, ECE 191, ECE 192, or ICAM 160B; or consent of instructor."
	},
	{
		"name": "Ubiquitous Computing",
		"description": "Explores emerging opportunities enabled by cheap sensors and networked computing devices. Small research projects will be conducted in teams, culminating in project presentations at the end of the term. Section will cover material relevant to the project, such as research methods, software engineering, teamwork, and project management.",
		"prerequisite": "Any course from the following: CSE 131, CSE 132B, COGS 102C, COGS 121, COGS 184, COMT 111B, COMT 115, ECE 111, ECE 118, ECE 191, ECE 192, or ICAM 160B; or consent of instructor."
	},
	{
		"name": "CSE 120",
		"description": "Basic functions of operating systems; basic kernel structure, concurrency, memory management, virtual memory, file systems, process scheduling, security and protection.",
		"prerequisite": "CSE 30 and CSE 101 and CSE 110; restricted to students within the CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Principles of Computer Operating Systems",
		"description": "Basic functions of operating systems; basic kernel structure, concurrency, memory management, virtual memory, file systems, process scheduling, security and protection.",
		"prerequisite": "CSE 30 and CSE 101 and CSE 110; restricted to students within the CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 123",
		"description": "Introduction to concepts, principles, and practice of computer communication networks with examples from existing architectures, protocols, and standards with special emphasis on the internet protocols. Layering and the OSI model; physical and data link layers; local and wide area networks; datagrams and virtual circuits; routing and congestion control; internetworking. Transport protocols. Credit may not be received for both CSE 123 and ECE 158A.",
		"prerequisite": "CSE 30 and CSE 101 and CSE 110; restricted to students with sophomore, junior, or senior standing within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Computer Networks",
		"description": "Introduction to concepts, principles, and practice of computer communication networks with examples from existing architectures, protocols, and standards with special emphasis on the internet protocols. Layering and the OSI model; physical and data link layers; local and wide area networks; datagrams and virtual circuits; routing and congestion control; internetworking. Transport protocols. Credit may not be received for both CSE 123 and ECE 158A.",
		"prerequisite": "CSE 30 and CSE 101 and CSE 110; restricted to students with sophomore, junior, or senior standing within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 124",
		"description": "The architecture of modern networked services, including data center design, enterprise storage, fault tolerance, and load balancing. Protocol software structuring, the Transmission Control Protocol , remote procedure calls, protocols for digital audio and video communication, overlay and peer-to-peer systems, secure communication. Credit may not be received for both CSE 124 and ECE 158B. Students may not receive credit for both CSE 123B and CSE 124.",
		"prerequisite": "CSE 30 and CSE 101 and CSE 110; restricted to students with sophomore, junior, or senior standing within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Networked Services",
		"description": "The architecture of modern networked services, including data center design, enterprise storage, fault tolerance, and load balancing. Protocol software structuring, the Transmission Control Protocol , remote procedure calls, protocols for digital audio and video communication, overlay and peer-to-peer systems, secure communication. Credit may not be received for both CSE 124 and ECE 158B. Students may not receive credit for both CSE 123B and CSE 124.",
		"prerequisite": "CSE 30 and CSE 101 and CSE 110; restricted to students with sophomore, junior, or senior standing within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 125",
		"description": "Design and implementation of large, complex software systems involving multiple aspects of CSE curriculum. Emphasis is on software system design applied to a single, large group project with close interaction with instructor.",
		"prerequisite": "Senior standing with substantial programming experience, and consent of instructor. Department stamp required."
	},
	{
		"name": "Software System Design and Implementation",
		"description": "Design and implementation of large, complex software systems involving multiple aspects of CSE curriculum. Emphasis is on software system design applied to a single, large group project with close interaction with instructor.",
		"prerequisite": "Senior standing with substantial programming experience, and consent of instructor. Department stamp required."
	},
	{
		"name": "CSE 127",
		"description": "Topics include basic cryptography, security/threat analysis, access control, auditing, security models, distributed systems security, and theory behind common attack and defense techniques. The class will go over formal models as well as the bits and bytes of security exploits.",
		"prerequisite": "and ; restricted to students with sophomore, junior, or senior standing within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Introduction to Computer Security",
		"description": "Topics include basic cryptography, security/threat analysis, access control, auditing, security models, distributed systems security, and theory behind common attack and defense techniques. The class will go over formal models as well as the bits and bytes of security exploits.",
		"prerequisite": "and ; restricted to students with sophomore, junior, or senior standing within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 130",
		"description": "Introduction to programming languages and paradigms, the components that comprise them, and the principles of language design, all through the analysis and comparison of a variety of languages  Will involve programming in most languages studied.",
		"prerequisite": "CSE 12 and  and ; restricted to students within the CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Programming Languages: Principles and Paradigms",
		"description": "Introduction to programming languages and paradigms, the components that comprise them, and the principles of language design, all through the analysis and comparison of a variety of languages  Will involve programming in most languages studied.",
		"prerequisite": "CSE 12 and  and ; restricted to students within the CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 131",
		"description": "Introduction to the compilation of programming languages, practice of lexical and syntactic analysis, symbol tables, syntax-directed translation, type checking, code generation, optimization, interpretation, and compiler structure.",
		"prerequisite": "CSE 100 and CSE 105 and CSE 130; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Compiler Construction",
		"description": "Introduction to the compilation of programming languages, practice of lexical and syntactic analysis, symbol tables, syntax-directed translation, type checking, code generation, optimization, interpretation, and compiler structure.",
		"prerequisite": "CSE 100 and CSE 105 and CSE 130; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 132A",
		"description": "Basic concepts of databases, including data modeling, relational databases, query languages, optimization, dependencies, schema design, and concurrency control. Exposure to one or several commercial database systems. Advanced topics such as deductive and object-oriented databases, time allowing.",
		"prerequisite": "CSE 100; restricted to students with sophomore, junior, or senior standing within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Database System Principles",
		"description": "Basic concepts of databases, including data modeling, relational databases, query languages, optimization, dependencies, schema design, and concurrency control. Exposure to one or several commercial database systems. Advanced topics such as deductive and object-oriented databases, time allowing.",
		"prerequisite": "CSE 100; restricted to students with sophomore, junior, or senior standing within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 132B",
		"description": "Design of databases, transactions, use of trigger facilities and datablades. Performance measuring, organization of index structures.",
		"prerequisite": "CSE 132A; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Database Systems Applications",
		"description": "Design of databases, transactions, use of trigger facilities and datablades. Performance measuring, organization of index structures.",
		"prerequisite": "CSE 132A; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 134B",
		"description": "Design and implementation of interactive World Wide Web clients using helper applications and plug-ins. The main language covered will be Java.",
		"prerequisite": "CSE 100; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Web Client Languages",
		"description": "Design and implementation of interactive World Wide Web clients using helper applications and plug-ins. The main language covered will be Java.",
		"prerequisite": "CSE 100; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 135",
		"description": "Database, data warehouse, and data cube design; SQL programming and querying with emphasis on analytics; online analytics applications, visualizations, and data exploration; performance tuning.",
		"prerequisite": "CSE 100 or MATH 176; restricted to students with sophomore, junior, or senior standing within the CS25, CS26, CS27, CS28, and EC26 majors. Graduate students will be allowed as space permits."
	},
	{
		"name": "Online Database Analytics Applications",
		"description": "Database, data warehouse, and data cube design; SQL programming and querying with emphasis on analytics; online analytics applications, visualizations, and data exploration; performance tuning.",
		"prerequisite": "CSE 100 or MATH 176; restricted to students with sophomore, junior, or senior standing within the CS25, CS26, CS27, CS28, and EC26 majors. Graduate students will be allowed as space permits."
	},
	{
		"name": "CSE 136",
		"description": "Design and implementation of very large-scale, web-based applications. Topics covered typically include modeling organizational needs, design and revision management, J2EE or similar software platforms, web server and application server functionality, reuse of object-oriented components, model-view-controller and other design patterns, clustering, load-balancing, fault-tolerance, authentication, and usage accounting.",
		"prerequisite": "CSE 135."
	},
	{
		"name": "Enterprise-Class Web Applications",
		"description": "Design and implementation of very large-scale, web-based applications. Topics covered typically include modeling organizational needs, design and revision management, J2EE or similar software platforms, web server and application server functionality, reuse of object-oriented components, model-view-controller and other design patterns, clustering, load-balancing, fault-tolerance, authentication, and usage accounting.",
		"prerequisite": "CSE 135."
	},
	{
		"name": "CSE 140",
		"description": "Design of Boolean logic and finite state machines; two-level, multilevel combinational logic design, combinational modules and modular networks, Mealy and Moore machines, analysis and synthesis of canonical forms, sequential modules.",
		"prerequisite": "and CSE 30; CSE 140L must be taken concurrently; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits"
	},
	{
		"name": "Components and Design Techniques for Digital Systems",
		"description": "Design of Boolean logic and finite state machines; two-level, multilevel combinational logic design, combinational modules and modular networks, Mealy and Moore machines, analysis and synthesis of canonical forms, sequential modules.",
		"prerequisite": "and CSE 30; CSE 140L must be taken concurrently; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits"
	},
	{
		"name": "CSE 140L",
		"description": "Implementation with computer-aided design tools for combinational logic minimization and state machine synthesis. Hardware construction of a small digital system.",
		"prerequisite": "and CSE 30; CSE 140 must be taken concurrently; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Digital Systems Laboratory",
		"description": "Implementation with computer-aided design tools for combinational logic minimization and state machine synthesis. Hardware construction of a small digital system.",
		"prerequisite": "and CSE 30; CSE 140 must be taken concurrently; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 141",
		"description": "Introduction to computer architecture. Computer system design. Processor design. Control design. Memory systems. Two units of credit offered for CSE 141 if CSE 142 taken previously.",
		"prerequisite": "CSE 30 and CSE 140 and CSE 140L; CSE 141L should be taken concurrently; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Introduction to Computer Architecture",
		"description": "Introduction to computer architecture. Computer system design. Processor design. Control design. Memory systems. Two units of credit offered for CSE 141 if CSE 142 taken previously.",
		"prerequisite": "CSE 30 and CSE 140 and CSE 140L; CSE 141L should be taken concurrently; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 141L",
		"description": "Hands-on computer architecture project aiming to familiarize students with instruction set architecture, and design of process. Control and memory systems.",
		"prerequisite": "CSE 30 and CSE 140 and CSE 140L; CSE 141 should be taken concurrently; restricted to CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Project in Computer Architecture",
		"description": "Hands-on computer architecture project aiming to familiarize students with instruction set architecture, and design of process. Control and memory systems.",
		"prerequisite": "CSE 30 and CSE 140 and CSE 140L; CSE 141 should be taken concurrently; restricted to CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 142",
		"description": "This course covers the operation, structure, and programming interfaces of modern CPUs with an emphasis on exploiting processor features to improve software performance and efficiency. The topics covered in this course include performance, energy, x86 assembly, compiler optimizations, pipelining, instruction-level parallelism, caches, memory-level parallelism, multi-threading, multi-core processors, and SIMD. Two units of credit offered for CSE 142 if CSE 141 taken previously or concurrently.",
		"prerequisite": "CSE 30 and CSE 100; CSE 142L should be taken concurrently. Restricted to students within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Introduction to Computer Architecture: A Software Perspective",
		"description": "This course covers the operation, structure, and programming interfaces of modern CPUs with an emphasis on exploiting processor features to improve software performance and efficiency. The topics covered in this course include performance, energy, x86 assembly, compiler optimizations, pipelining, instruction-level parallelism, caches, memory-level parallelism, multi-threading, multi-core processors, and SIMD. Two units of credit offered for CSE 142 if CSE 141 taken previously or concurrently.",
		"prerequisite": "CSE 30 and CSE 100; CSE 142L should be taken concurrently. Restricted to students within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 142L",
		"description": "This course provides hands-on experience in using the features of modern CPUs to increase the performance and efficiency of programs.",
		"prerequisite": "CSE 30 and CSE 100; CSE 142 should be taken concurrently. Restricted to students within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Software Project for Computer Architecture",
		"description": "This course provides hands-on experience in using the features of modern CPUs to increase the performance and efficiency of programs.",
		"prerequisite": "CSE 30 and CSE 100; CSE 142 should be taken concurrently. Restricted to students within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 143",
		"description": "VLSI process technologies; circuit characterization; logic design styles; clocking strategies; computer-aided design tools; subsystem design; design case studies. System design project from hardware description, logic synthesis, physical layout to design verification.",
		"prerequisite": "CSE 140 or CSE 170A or ECE 81."
	},
	{
		"name": "Microelectronic System Design",
		"description": "VLSI process technologies; circuit characterization; logic design styles; clocking strategies; computer-aided design tools; subsystem design; design case studies. System design project from hardware description, logic synthesis, physical layout to design verification.",
		"prerequisite": "CSE 140 or CSE 170A or ECE 81."
	},
	{
		"name": "CSE 145",
		"description": "Project class building an embedded computing system. Learn fundamental knowledge of microcontrollers, sensors, and actuators. Introduction to the hardware and software tools to build project in a team environment and end-to-end system building.",
		"prerequisite": "Instructor approval required, by application only."
	},
	{
		"name": "Embedded System Design Project",
		"description": "Project class building an embedded computing system. Learn fundamental knowledge of microcontrollers, sensors, and actuators. Introduction to the hardware and software tools to build project in a team environment and end-to-end system building.",
		"prerequisite": "Instructor approval required, by application only."
	},
	{
		"name": "CSE 148",
		"description": "Students will use hardware description language tools to add advanced architectural features to a basic processor design. These features may include pipelining, superscalar execution, branch prediction, and advanced cache features. Designs will be implemented in programmable logic devices.",
		"prerequisite": "CSE 141 and CSE 141L; restricted to students with sophomore, junior, or senior standing. Graduate students will be allowed as space permits."
	},
	{
		"name": "Advanced Processor Architecture Design Project",
		"description": "Students will use hardware description language tools to add advanced architectural features to a basic processor design. These features may include pipelining, superscalar execution, branch prediction, and advanced cache features. Designs will be implemented in programmable logic devices.",
		"prerequisite": "CSE 141 and CSE 141L; restricted to students with sophomore, junior, or senior standing. Graduate students will be allowed as space permits."
	},
	{
		"name": "CSE 150A",
		"description": "Introduction to probabilistic models at the heart of modern artificial intelligence. Specific topics to be covered include probabilistic methods for reasoning and decision-making under uncertainty; inference and learning in Bayesian networks; prediction and planning in Markov decision processes; applications to intelligent systems, speech and natural language processing, information retrieval, and robotics.",
		"prerequisite": "and  and  and  and ; restricted to students within the CS25, CS26, CS27, CS28, EC26, and DS25 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Introduction to Artificial Intelligence: Probabilistic Reasoning and Decision-Making",
		"description": "Introduction to probabilistic models at the heart of modern artificial intelligence. Specific topics to be covered include probabilistic methods for reasoning and decision-making under uncertainty; inference and learning in Bayesian networks; prediction and planning in Markov decision processes; applications to intelligent systems, speech and natural language processing, information retrieval, and robotics.",
		"prerequisite": "and  and  and  and ; restricted to students within the CS25, CS26, CS27, CS28, EC26, and DS25 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 150B",
		"description": "The course will introduce important ideas and algorithms in search and reasoning and demonstrate how they are used in practical AI applications. Topics include A* search, adversarial search, Monte Carlo tree search, reinforcement learning, constraint solving and optimization, propositional and first-order reasoning.",
		"prerequisite": "and  and  and ; restricted to students within the CS25, CS26, CS27, CS28, EC26, and DS25 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Introduction to Artificial Intelligence: Search and Reasoning",
		"description": "The course will introduce important ideas and algorithms in search and reasoning and demonstrate how they are used in practical AI applications. Topics include A* search, adversarial search, Monte Carlo tree search, reinforcement learning, constraint solving and optimization, propositional and first-order reasoning.",
		"prerequisite": "and  and  and ; restricted to students within the CS25, CS26, CS27, CS28, EC26, and DS25 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 151A",
		"description": "Broad introduction to machine learning. The topics include some topics in supervised learning, such as k-nearest neighbor classifiers, decision trees, boosting, and perceptrons; and topics in unsupervised learning, such as k-means and hierarchical clustering. In addition to the actual algorithms, the course focuses on the principles behind the algorithms. Students may not receive credit for both CSE 151A and COGS 188, nor may they receive credit for both CSE 151A and CSE 151.",
		"prerequisite": "and  and  and  and ; restricted to students within the CS25, CS26, CS27, CS28, EC26, and DS25 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Introduction to Machine Learning",
		"description": "Broad introduction to machine learning. The topics include some topics in supervised learning, such as k-nearest neighbor classifiers, decision trees, boosting, and perceptrons; and topics in unsupervised learning, such as k-means and hierarchical clustering. In addition to the actual algorithms, the course focuses on the principles behind the algorithms. Students may not receive credit for both CSE 151A and COGS 188, nor may they receive credit for both CSE 151A and CSE 151.",
		"prerequisite": "and  and  and  and ; restricted to students within the CS25, CS26, CS27, CS28, EC26, and DS25 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 151B",
		"description": "This course covers the fundamentals of neural networks. We introduce linear regression, logistic regression, perceptrons, multilayer networks and back-propagation, convolutional neural networks, recurrent networks, and deep networks trained by reinforcement learning. Students may receive credit for one of the following: CSE 151B, CSE 154, or COGS 181.",
		"prerequisite": "and ; restricted to students with sophomore, junior, or senior standing within the CS25, CS26, CS27, CS28, EC26, and DS25 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Deep Learning",
		"description": "This course covers the fundamentals of neural networks. We introduce linear regression, logistic regression, perceptrons, multilayer networks and back-propagation, convolutional neural networks, recurrent networks, and deep networks trained by reinforcement learning. Students may receive credit for one of the following: CSE 151B, CSE 154, or COGS 181.",
		"prerequisite": "and ; restricted to students with sophomore, junior, or senior standing within the CS25, CS26, CS27, CS28, EC26, and DS25 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 152A",
		"description": "This course provides a broad introduction to the foundations, algorithms, and applications of computer vision. It introduces classical models and contemporary methods, from image formation models to deep learning, to address problems of 3-D reconstruction and object recognition from images and video. Topics include filtering, feature detection, stereo vision, structure from motion, motion estimation, and recognition. Programming assignments will be in Python. Students may not receive credit for both CSE 152A and CSE 152.",
		"prerequisite": "and  and ; Python programming experience recommended; restricted to students within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Introduction to Computer Vision I",
		"description": "This course provides a broad introduction to the foundations, algorithms, and applications of computer vision. It introduces classical models and contemporary methods, from image formation models to deep learning, to address problems of 3-D reconstruction and object recognition from images and video. Topics include filtering, feature detection, stereo vision, structure from motion, motion estimation, and recognition. Programming assignments will be in Python. Students may not receive credit for both CSE 152A and CSE 152.",
		"prerequisite": "and  and ; Python programming experience recommended; restricted to students within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 152B",
		"description": "This course covers advanced topics needed to apply computer vision in industry or follow current research. Example topics include real-time systems for 3-D computer vision, machine learning tools such as support-vector machine  and boosting for image classification, and deep neural networks for object detection and semantic segmentation.",
		"prerequisite": "CSE 152A or CSE 152 or CSE166; Python programming experience recommended; restricted to students within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Introduction to Computer Vision II",
		"description": "This course covers advanced topics needed to apply computer vision in industry or follow current research. Example topics include real-time systems for 3-D computer vision, machine learning tools such as support-vector machine  and boosting for image classification, and deep neural networks for object detection and semantic segmentation.",
		"prerequisite": "CSE 152A or CSE 152 or CSE166; Python programming experience recommended; restricted to students within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 156",
		"description": "Natural language processing  is a field of AI which aims to equip computers with the ability to intelligently process natural  language. This course will explore statistical techniques for the automatic analysis of natural language data. Specific topics covered include probabilistic language models, which define probability distributions over text passages; text classification; sequence models; parsing sentences into syntactic representations; and machine translation.",
		"prerequisite": "MATH 20C or MATH 31BH and MATH 18 or MATH 31AH and COGS 118A or CSE 150 or CSE 151; restricted to students with sophomore, junior, or senior standing within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Statistical Natural Language Processing",
		"description": "Natural language processing  is a field of AI which aims to equip computers with the ability to intelligently process natural  language. This course will explore statistical techniques for the automatic analysis of natural language data. Specific topics covered include probabilistic language models, which define probability distributions over text passages; text classification; sequence models; parsing sentences into syntactic representations; and machine translation.",
		"prerequisite": "MATH 20C or MATH 31BH and MATH 18 or MATH 31AH and COGS 118A or CSE 150 or CSE 151; restricted to students with sophomore, junior, or senior standing within the CS25, CS26, CS27, CS28, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 158",
		"description": "Current methods for data mining and predictive analytics. Emphasis is on studying real-world data sets, building working systems, and putting current ideas from machine learning research into practice.",
		"prerequisite": "and  and ; restricted to CS25, CS26, CS27, CS28, EC26, and DS25 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Recommender Systems and Web Mining",
		"description": "Current methods for data mining and predictive analytics. Emphasis is on studying real-world data sets, building working systems, and putting current ideas from machine learning research into practice.",
		"prerequisite": "and  and ; restricted to CS25, CS26, CS27, CS28, EC26, and DS25 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 160",
		"description": "Introduction to high performance parallel computing: parallel architecture, algorithms, software, and problem-solving techniques. Areas covered: Flynn’s taxonomy, processor-memory organizations, shared and nonshared memory models: message passing and multithreading, data parallelism; speedup, efficiency and Amdahl’s law, communication and synchronization, isoefficiency and scalability. Assignments given to provide practical experience.",
		"prerequisite": "CSE 100 or MATH 176; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits"
	},
	{
		"name": "Introduction to Parallel Computing",
		"description": "Introduction to high performance parallel computing: parallel architecture, algorithms, software, and problem-solving techniques. Areas covered: Flynn’s taxonomy, processor-memory organizations, shared and nonshared memory models: message passing and multithreading, data parallelism; speedup, efficiency and Amdahl’s law, communication and synchronization, isoefficiency and scalability. Assignments given to provide practical experience.",
		"prerequisite": "CSE 100 or MATH 176; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits"
	},
	{
		"name": "CSE 163",
		"description": "Topics include an overview of many aspects of computer graphics, including the four main computer graphics areas of animation, modeling, rendering, and imaging. Programming projects in image and signal processing, geometric modeling, and real-time rendering.",
		"prerequisite": "CSE 167; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Advanced Computer Graphics",
		"description": "Topics include an overview of many aspects of computer graphics, including the four main computer graphics areas of animation, modeling, rendering, and imaging. Programming projects in image and signal processing, geometric modeling, and real-time rendering.",
		"prerequisite": "CSE 167; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 164",
		"description": "Principles and practices of programming graphics processing units . GPU architecture and hardware concepts, including memory and threading models. Modern hardware-accelerated graphics pipeline programming. Application of GPU programming to rendering of game graphics, including physical, deferring, and global lighting models. Recommended preparation: Practical Rendering and Computation with Direct3D 11 by Jason Zink, Matt Pettineo, and Jack Hoxley.",
		"prerequisite": "CSE 167."
	},
	{
		"name": "GPU Programming",
		"description": "Principles and practices of programming graphics processing units . GPU architecture and hardware concepts, including memory and threading models. Modern hardware-accelerated graphics pipeline programming. Application of GPU programming to rendering of game graphics, including physical, deferring, and global lighting models. Recommended preparation: Practical Rendering and Computation with Direct3D 11 by Jason Zink, Matt Pettineo, and Jack Hoxley.",
		"prerequisite": "CSE 167."
	},
	{
		"name": "CSE 165",
		"description": "This course focuses on design and evaluation of three-dimensional  user interfaces, devices, and interaction techniques. The course consists of lectures, literature reviews, and programming assignments. Students will be expected to create interaction techniques for several different 3-D interaction devices. Program or materials fees may apply.",
		"prerequisite": "CSE 167; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "3-D User Interaction",
		"description": "This course focuses on design and evaluation of three-dimensional  user interfaces, devices, and interaction techniques. The course consists of lectures, literature reviews, and programming assignments. Students will be expected to create interaction techniques for several different 3-D interaction devices. Program or materials fees may apply.",
		"prerequisite": "CSE 167; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 166",
		"description": "Principles of image formation, analysis, and representation. Image enhancement, restoration, and segmentation; stochastic image models. Filter design, sampling, Fourier and wavelet transforms. Selected applications in computer graphics and machine vision.",
		"prerequisite": "and ; restricted to sophomore, junior, and senior students. Graduate students allowed as space permits."
	},
	{
		"name": "Image Processing",
		"description": "Principles of image formation, analysis, and representation. Image enhancement, restoration, and segmentation; stochastic image models. Filter design, sampling, Fourier and wavelet transforms. Selected applications in computer graphics and machine vision.",
		"prerequisite": "and ; restricted to sophomore, junior, and senior students. Graduate students allowed as space permits."
	},
	{
		"name": "CSE 167",
		"description": "Representation and manipulation of pictorial data. Two-dimensional and three-dimensional transformations, curves, surfaces. Projection, illumination, and shading models. Raster and vector graphic I/O devices; retained-mode and immediate-mode graphics software systems and applications. Students may not receive credit for both MATH 155A and CSE 167.",
		"prerequisite": "CSE 100 or MATH 176; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Computer Graphics",
		"description": "Representation and manipulation of pictorial data. Two-dimensional and three-dimensional transformations, curves, surfaces. Projection, illumination, and shading models. Raster and vector graphic I/O devices; retained-mode and immediate-mode graphics software systems and applications. Students may not receive credit for both MATH 155A and CSE 167.",
		"prerequisite": "CSE 100 or MATH 176; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 168",
		"description": "Weekly programming assignments that will cover graphics rendering algorithms. During the course the students will learn about ray tracing, geometry, tessellation, acceleration structures, sampling, filtering, shading models, and advanced topics such as global illumination and programmable graphics hardware.",
		"prerequisite": "CSE 167; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Computer Graphics II: Rendering",
		"description": "Weekly programming assignments that will cover graphics rendering algorithms. During the course the students will learn about ray tracing, geometry, tessellation, acceleration structures, sampling, filtering, shading models, and advanced topics such as global illumination and programmable graphics hardware.",
		"prerequisite": "CSE 167; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 169",
		"description": "Advanced graphics focusing on the programming techniques involved in computer animation. Algorithms and approaches for both character animation and physically based animation. Particular subjects may include skeletons, skinning, key framing, facial animation, inverse kinematics, locomotion, motion capture, video game animation, particle systems, rigid bodies, clothing, and hair. Recommended preparation: An understanding of linear algebra.",
		"prerequisite": "CSE 167; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "Computer Animation",
		"description": "Advanced graphics focusing on the programming techniques involved in computer animation. Algorithms and approaches for both character animation and physically based animation. Particular subjects may include skeletons, skinning, key framing, facial animation, inverse kinematics, locomotion, motion capture, video game animation, particle systems, rigid bodies, clothing, and hair. Recommended preparation: An understanding of linear algebra.",
		"prerequisite": "CSE 167; restricted to CS25, CS26, CS27, and EC26 majors. All other students will be allowed as space permits."
	},
	{
		"name": "CSE 170",
		"description": "Introduces fundamental methods and principles for designing, implementing, and evaluating user interfaces. Topics include user-centered design, rapid prototyping, experimentation, direct manipulation, cognitive principles, visual design, social software, software tools. Learn by doing: Work with a team on a quarter-long design project. Cross-listed with COGS 120. Students may not receive credit for COGS 120 and CSE 170. Recommended preparation: Basic familiarity with HTML.",
		"prerequisite": "CSE 11 or CSE 8B and COGS 187A or COGS 1 or DSGN 1."
	},
	{
		"name": "Interaction Design",
		"description": "Introduces fundamental methods and principles for designing, implementing, and evaluating user interfaces. Topics include user-centered design, rapid prototyping, experimentation, direct manipulation, cognitive principles, visual design, social software, software tools. Learn by doing: Work with a team on a quarter-long design project. Cross-listed with COGS 120. Students may not receive credit for COGS 120 and CSE 170. Recommended preparation: Basic familiarity with HTML.",
		"prerequisite": "CSE 11 or CSE 8B and COGS 187A or COGS 1 or DSGN 1."
	},
	{
		"name": "CSE 176A",
		"description": "Robotics has the potential to improve well-being for millions of people and support caregivers and to aid the clinical workforce. We bring together engineers, clinicians, and end-users to explore this exciting new field. The course is project-based, interactive, and hands-on, and involves working closely with stakeholders to develop prototypes that solve real-world problems. Students will explore the latest research in health care robotics, human-robot teaming, and health design. Program or materials fees may apply.",
		"prerequisite": "CSE 110 or CSE 170 or COGS 120; restricted to sophomore, junior, and senior students."
	},
	{
		"name": "Health Care Robotics",
		"description": "Robotics has the potential to improve well-being for millions of people and support caregivers and to aid the clinical workforce. We bring together engineers, clinicians, and end-users to explore this exciting new field. The course is project-based, interactive, and hands-on, and involves working closely with stakeholders to develop prototypes that solve real-world problems. Students will explore the latest research in health care robotics, human-robot teaming, and health design. Program or materials fees may apply.",
		"prerequisite": "CSE 110 or CSE 170 or COGS 120; restricted to sophomore, junior, and senior students."
	},
	{
		"name": "CSE 176E",
		"description": "End-to-end system design of embedded electronic systems including PCB design and fabrication, software control system development, and system integration. Program or materials fees may apply. May be coscheduled with CSE 276E.",
		"prerequisite": "Restricted to junior and senior students; instructor approval required."
	},
	{
		"name": "Robot Systems Design and Implementation",
		"description": "End-to-end system design of embedded electronic systems including PCB design and fabrication, software control system development, and system integration. Program or materials fees may apply. May be coscheduled with CSE 276E.",
		"prerequisite": "Restricted to junior and senior students; instructor approval required."
	},
	{
		"name": "CSE 180",
		"description": "Topics include an overview of various aspects of bioinformatics and will simultaneously introduce students to programming in Python. The assessments in the course represent various programming challenges and include solving diverse biological problems using popular bioinformatics tools. Students may not receive credit for CSE 180 and CSE 180R.",
		"prerequisite": "BILD 1."
	},
	{
		"name": "Biology Meets Computing",
		"description": "Topics include an overview of various aspects of bioinformatics and will simultaneously introduce students to programming in Python. The assessments in the course represent various programming challenges and include solving diverse biological problems using popular bioinformatics tools. Students may not receive credit for CSE 180 and CSE 180R.",
		"prerequisite": "BILD 1."
	},
	{
		"name": "CSE 180R",
		"description": "Topics include an overview of various aspects of bioinformatics and will simultaneously introduce students to programming in Python. The assessments in the course represent various programming challenges and include solving diverse biological problems using popular bioinformatics tools. This will be a fully online class based on extensive educational materials and online educational platform Stepik developed with HHMI, NIH, and ILTI support. Students may not receive credit for CSE 180 and CSE 180R.",
		"prerequisite": "BILD 1 or BILD 4 or CSE 3 or CSE 7 or CSE 8A or CSE 8B or CSE 11."
	},
	{
		"name": "Biology Meets Computing",
		"description": "Topics include an overview of various aspects of bioinformatics and will simultaneously introduce students to programming in Python. The assessments in the course represent various programming challenges and include solving diverse biological problems using popular bioinformatics tools. This will be a fully online class based on extensive educational materials and online educational platform Stepik developed with HHMI, NIH, and ILTI support. Students may not receive credit for CSE 180 and CSE 180R.",
		"prerequisite": "BILD 1 or BILD 4 or CSE 3 or CSE 7 or CSE 8A or CSE 8B or CSE 11."
	},
	{
		"name": "CSE 181",
		"description": "This course covers the analysis of nucleic acid and protein sequences, with an emphasis on the application of algorithms to biological problems. Topics include sequence alignments, database searching, comparative genomics, and phylogenetic and clustering analyses. Pairwise alignment, multiple alignment, DNS sequencing, scoring functions, fast database search, comparative genomics, clustering, phylogenetic trees, gene finding/DNA statistics. Students may receive credit for one of the following: CSE 181, BIMM 181, or BENG 181.",
		"prerequisite": "and  and ; restricted to BE28, BI34, CH37, and CS27 majors. CSE 181 is cross-listed with BIMM 181 and BENG 181."
	},
	{
		"name": "Molecular Sequence Analysis",
		"description": "This course covers the analysis of nucleic acid and protein sequences, with an emphasis on the application of algorithms to biological problems. Topics include sequence alignments, database searching, comparative genomics, and phylogenetic and clustering analyses. Pairwise alignment, multiple alignment, DNS sequencing, scoring functions, fast database search, comparative genomics, clustering, phylogenetic trees, gene finding/DNA statistics. Students may receive credit for one of the following: CSE 181, BIMM 181, or BENG 181.",
		"prerequisite": "and  and ; restricted to BE28, BI34, CH37, and CS27 majors. CSE 181 is cross-listed with BIMM 181 and BENG 181."
	},
	{
		"name": "CSE 182",
		"description": "This course provides an introduction to the features of biological data, how those data are organized efficiently in databases, and how existing data resources can be utilized to solve a variety of biological problems. Object oriented databases, data modeling and description. Survey of current biological database with respect to above, implementation of a database on a biological topic. Cross-listed with BIMM 182 and BENG 182. Students may receive credit for one of the following: CSE 182, BENG 182, or BIMM 182.",
		"prerequisite": "CSE 100 or MATH 176; restricted to BE28, BI34, CH37, and CS27 majors."
	},
	{
		"name": "Biological Databases",
		"description": "This course provides an introduction to the features of biological data, how those data are organized efficiently in databases, and how existing data resources can be utilized to solve a variety of biological problems. Object oriented databases, data modeling and description. Survey of current biological database with respect to above, implementation of a database on a biological topic. Cross-listed with BIMM 182 and BENG 182. Students may receive credit for one of the following: CSE 182, BENG 182, or BIMM 182.",
		"prerequisite": "CSE 100 or MATH 176; restricted to BE28, BI34, CH37, and CS27 majors."
	},
	{
		"name": "CSE 184",
		"description": "This advanced course covers the application of machine learning and modeling techniques to biological systems. Topics include gene structure, recognition of DNA and protein sequence patterns, classification, and protein structure prediction. Pattern discovery, Hidden Markov models/support victor machines/neural network/profiles. Protein structure prediction, functional characterization or proteins, functional genomics/proteomics, metabolic pathways/gene networks. Cross-listed with BIMM 184/BENG 184/CHEM 184.",
		"prerequisite": "BIMM 181 or BENG 181 or CSE 181, BENG 182 or BIMM 182 or CSE 182 or CHEM 182. Bioinformatics majors only."
	},
	{
		"name": "Computational Molecular Biology",
		"description": "This advanced course covers the application of machine learning and modeling techniques to biological systems. Topics include gene structure, recognition of DNA and protein sequence patterns, classification, and protein structure prediction. Pattern discovery, Hidden Markov models/support victor machines/neural network/profiles. Protein structure prediction, functional characterization or proteins, functional genomics/proteomics, metabolic pathways/gene networks. Cross-listed with BIMM 184/BENG 184/CHEM 184.",
		"prerequisite": "BIMM 181 or BENG 181 or CSE 181, BENG 182 or BIMM 182 or CSE 182 or CHEM 182. Bioinformatics majors only."
	},
	{
		"name": "CSE 185",
		"description": "This course emphasizes the hands-on application of bioinformatics to biological problems. Students will gain experience in the application of existing software, as well as in combining approaches to answer specific biological questions. Topics include sequence alignment, fast database search, comparative genomics, expression analysis, computational proteomics, genome-wide association studies, next-generation sequencing, genomics, and big data. Students may not receive credit for CSE 185 and BIMM 185. Restricted to CS27, BI34, BE28, and CH37 major codes.",
		"prerequisite": "CSE 11 or CSE 8B and CSE 12 and MATH 20C or MATH 31BH and BILD 1 and BIEB 123 or BILD 4 or BIMM 101 or CHEM 109."
	},
	{
		"name": "Advanced Bioinformatics Laboratory",
		"description": "This course emphasizes the hands-on application of bioinformatics to biological problems. Students will gain experience in the application of existing software, as well as in combining approaches to answer specific biological questions. Topics include sequence alignment, fast database search, comparative genomics, expression analysis, computational proteomics, genome-wide association studies, next-generation sequencing, genomics, and big data. Students may not receive credit for CSE 185 and BIMM 185. Restricted to CS27, BI34, BE28, and CH37 major codes.",
		"prerequisite": "CSE 11 or CSE 8B and CSE 12 and MATH 20C or MATH 31BH and BILD 1 and BIEB 123 or BILD 4 or BIMM 101 or CHEM 109."
	},
	{
		"name": "CSE 190",
		"description": "Topics of special interest in computer science and engineering. Topics may vary from quarter to quarter. May be repeated for credit with the consent of instructor.",
		"prerequisite": "Consent of instructor. Department stamp required."
	},
	{
		"name": "Topics in Computer Science and Engineering",
		"description": "Topics of special interest in computer science and engineering. Topics may vary from quarter to quarter. May be repeated for credit with the consent of instructor.",
		"prerequisite": "Consent of instructor. Department stamp required."
	},
	{
		"name": "CSE 191",
		"description": "A seminar course on topics of current interest. Students, as well as the instructor, will be actively involved in running the course/class. This course cannot be counted toward a technical elective.",
		"prerequisite": "Consent of instructor. Department stamp required."
	},
	{
		"name": "Seminar in CSE",
		"description": "A seminar course on topics of current interest. Students, as well as the instructor, will be actively involved in running the course/class. This course cannot be counted toward a technical elective.",
		"prerequisite": "Consent of instructor. Department stamp required."
	},
	{
		"name": "CSE 192",
		"description": "The Senior Seminar Program is designed to allow senior undergraduates to meet with faculty members in a small group setting to explore an intellectual topic in CSE . Topics will vary from quarter to quarter. Senior seminars may be taken for credit up to four times, with a change in topic, and permission of the department. Enrollment is limited to twenty students, with preference given to seniors.",
		"prerequisite": "Upper-division standing; department stamp required and consent of instructor."
	},
	{
		"name": "Senior Seminar in Computer Science and Engineering",
		"description": "The Senior Seminar Program is designed to allow senior undergraduates to meet with faculty members in a small group setting to explore an intellectual topic in CSE . Topics will vary from quarter to quarter. Senior seminars may be taken for credit up to four times, with a change in topic, and permission of the department. Enrollment is limited to twenty students, with preference given to seniors.",
		"prerequisite": "Upper-division standing; department stamp required and consent of instructor."
	},
	{
		"name": "CSE 193",
		"description": "Introduction to research in computer science. Topics include defining a CS research problem, finding and reading technical papers, oral communication, technical writing, and independent learning. Course participants apprentice with a CSE research group and propose an original research project.",
		"prerequisite": "Consent of the department chair. Department stamp required."
	},
	{
		"name": "Introduction to Computer Science Research",
		"description": "Introduction to research in computer science. Topics include defining a CS research problem, finding and reading technical papers, oral communication, technical writing, and independent learning. Course participants apprentice with a CSE research group and propose an original research project.",
		"prerequisite": "Consent of the department chair. Department stamp required."
	},
	{
		"name": "CSE 195",
		"description": "Teaching and tutorial assistance in a CSE course under the supervision of the instructor.",
		"prerequisite": "Consent of the department chair. Department stamp required."
	},
	{
		"name": "Teaching",
		"description": "Teaching and tutorial assistance in a CSE course under the supervision of the instructor.",
		"prerequisite": "Consent of the department chair. Department stamp required."
	},
	{
		"name": "CSE 197",
		"description": "Directed study accompanying full-time on-site computer science internships.",
		"prerequisite": "Consent of the instructor and approval of the department. Restricted to CS25, CS26, CS27, and CS28 majors only."
	},
	{
		"name": "Field Study in Computer Science and Engineering",
		"description": "Directed study accompanying full-time on-site computer science internships.",
		"prerequisite": "Consent of the instructor and approval of the department. Restricted to CS25, CS26, CS27, and CS28 majors only."
	},
	{
		"name": "CSE 198",
		"description": "Computer science and engineering topics whose study involves reading and discussion by a small group of students under the supervision of a faculty member.",
		"prerequisite": "Consent of the instructor. Department stamp required."
	},
	{
		"name": "Directed Group Study",
		"description": "Computer science and engineering topics whose study involves reading and discussion by a small group of students under the supervision of a faculty member.",
		"prerequisite": "Consent of the instructor. Department stamp required."
	},
	{
		"name": "CSE 199",
		"description": "Independent reading or research by special arrangement with a faculty member.",
		"prerequisite": "Consent of the instructor. Department stamp required."
	},
	{
		"name": "Independent Study for Undergraduates",
		"description": "Independent reading or research by special arrangement with a faculty member.",
		"prerequisite": "Consent of the instructor. Department stamp required."
	},
	{
		"name": "CSE 199H",
		"description": "Undergraduate research for completing an honors project under the supervision of a CSE faculty member. May be taken across multiple quarters. Students should enroll for a letter grade. May be taken for credit three times.",
		"prerequisite": "Admission to the CSE department honors program. Consent of the instructor. Department stamp required."
	},
	{
		"name": "CSE Honors Thesis Research for Undergraduates",
		"description": "Undergraduate research for completing an honors project under the supervision of a CSE faculty member. May be taken across multiple quarters. Students should enroll for a letter grade. May be taken for credit three times.",
		"prerequisite": "Admission to the CSE department honors program. Consent of the instructor. Department stamp required."
	},
	{
		"name": "CSE 200",
		"description": "Computability review, including halting problem, decidable sets, r.e. sets, many-one reductions; TIME), SPACE) and general relations between these classes; L, P, PSPACE, NP; NP—completeness; hierarchy theorems; RP, BPP.",
		"prerequisite": "CSE 105 or equivalent."
	},
	{
		"name": "Computability and Complexity",
		"description": "Computability review, including halting problem, decidable sets, r.e. sets, many-one reductions; TIME), SPACE) and general relations between these classes; L, P, PSPACE, NP; NP—completeness; hierarchy theorems; RP, BPP.",
		"prerequisite": "CSE 105 or equivalent."
	},
	{
		"name": "CSE 201A",
		"description": "Polynomial-time hierarchy , BPP in second level of PH, Savitch’s theorem, NL=coNL, nonuniform and circuit complexity, some circuit lower bounds, IP=PSPACE, probabilistic proof checking , application of PCP to approximation hardness, complexity of proof systems, parallel complexity classes NC and AC, P-completeness. Recommended preparation: CSE 200.",
		"prerequisite": "Graduate standing."
	},
	{
		"name": "Advanced Complexity",
		"description": "Polynomial-time hierarchy , BPP in second level of PH, Savitch’s theorem, NL=coNL, nonuniform and circuit complexity, some circuit lower bounds, IP=PSPACE, probabilistic proof checking , application of PCP to approximation hardness, complexity of proof systems, parallel complexity classes NC and AC, P-completeness. Recommended preparation: CSE 200.",
		"prerequisite": "Graduate standing."
	},
	{
		"name": "CSE 202",
		"description": "The basic techniques for the design and analysis of algorithms. Divide-and-conquer, dynamic programming, data structures, graph search, algebraic problems, randomized algorithms, lower bounds, probabilistic analysis, parallel algorithms.",
		"prerequisite": "CSE 101 or equivalent."
	},
	{
		"name": "Algorithm Design and Analysis",
		"description": "The basic techniques for the design and analysis of algorithms. Divide-and-conquer, dynamic programming, data structures, graph search, algebraic problems, randomized algorithms, lower bounds, probabilistic analysis, parallel algorithms.",
		"prerequisite": "CSE 101 or equivalent."
	},
	{
		"name": "CSE 203A",
		"description": "Modern advances in design and analysis of algorithms. Exact syllabus varies. Topics include approximation, randomized algorithms, probabilistic analysis, heuristics, online algorithms, competitive analysis, models of memory hierarchy, parallel algorithms, number-theoretic algorithms, cryptanalysis, computational geometry, computational biology, network algorithms, VLSI CAD algorithms.",
		"prerequisite": "CSE 202."
	},
	{
		"name": "Advanced Algorithms",
		"description": "Modern advances in design and analysis of algorithms. Exact syllabus varies. Topics include approximation, randomized algorithms, probabilistic analysis, heuristics, online algorithms, competitive analysis, models of memory hierarchy, parallel algorithms, number-theoretic algorithms, cryptanalysis, computational geometry, computational biology, network algorithms, VLSI CAD algorithms.",
		"prerequisite": "CSE 202."
	},
	{
		"name": "CSE 203B",
		"description": "We study the formulations and algorithms solving convex optimization problems. The topics include convex sets, functions, optimality conditions, duality concepts, gradient descent, conjugate gradient, interior-point methods, and applications. The objective of the course is to provide students the background and techniques for scientific computing and system optimization. Students cannot receive credit for CSE 203B if they have taken either ECE 273 or MATH 245B.",
		"prerequisite": "Linear Algebra is recommended."
	},
	{
		"name": "Convex Optimization Formulations and Algorithms",
		"description": "We study the formulations and algorithms solving convex optimization problems. The topics include convex sets, functions, optimality conditions, duality concepts, gradient descent, conjugate gradient, interior-point methods, and applications. The objective of the course is to provide students the background and techniques for scientific computing and system optimization. Students cannot receive credit for CSE 203B if they have taken either ECE 273 or MATH 245B.",
		"prerequisite": "Linear Algebra is recommended."
	},
	{
		"name": "CSE 205A",
		"description": "Mathematical logic as a tool in computer science. Propositional logic, resolution, first-order logic, completeness and incompleteness theorems with computational viewpoint, finite model theory, descriptive complexity, logic programming, nonmonotonic reasoning, temporal logic. Applications to databases, automatic theorem proving, program verification, and distributed systems.",
		"prerequisite": "CSE 200 or consent of instructor."
	},
	{
		"name": "Logic in Computer Science",
		"description": "Mathematical logic as a tool in computer science. Propositional logic, resolution, first-order logic, completeness and incompleteness theorems with computational viewpoint, finite model theory, descriptive complexity, logic programming, nonmonotonic reasoning, temporal logic. Applications to databases, automatic theorem proving, program verification, and distributed systems.",
		"prerequisite": "CSE 200 or consent of instructor."
	},
	{
		"name": "CSE 206A",
		"description": "Introduction to the algorithmic theory of point lattices , and some of its most important applications in cryptography and cryptanalysis. Topics usually include LLL basis reduction algorithm, cryptanalysis of broadcast RSA, hardness of approximating lattice problems.",
		"prerequisite": "CSE 202, CSE 200, or concurrent."
	},
	{
		"name": "Lattice Algorithms and Applications",
		"description": "Introduction to the algorithmic theory of point lattices , and some of its most important applications in cryptography and cryptanalysis. Topics usually include LLL basis reduction algorithm, cryptanalysis of broadcast RSA, hardness of approximating lattice problems.",
		"prerequisite": "CSE 202, CSE 200, or concurrent."
	},
	{
		"name": "CSE 207",
		"description": "Private and public key cryptography, introduction to reduction-based proofs of security, concrete security, block ciphers, pseudorandom functions and generators, symmetric encryption, asymmetric encryption, computational number theory, RSA and discrete log systems, message authentication, digital signatures, key distribution and key management.",
		"prerequisite": "CSE 202 or consent of instructor."
	},
	{
		"name": "Modern Cryptography",
		"description": "Private and public key cryptography, introduction to reduction-based proofs of security, concrete security, block ciphers, pseudorandom functions and generators, symmetric encryption, asymmetric encryption, computational number theory, RSA and discrete log systems, message authentication, digital signatures, key distribution and key management.",
		"prerequisite": "CSE 202 or consent of instructor."
	},
	{
		"name": "CSE 208",
		"description": "Zero-knowledge, secure computation, session-key distribution, protocols, electronic payment, one-way functions, trapdoor permutations, pseudorandom bit generators, hardcore bits.",
		"prerequisite": "CSE 202, CSE 200, and CSE 207 or consent of instructor."
	},
	{
		"name": "Advanced Cryptography",
		"description": "Zero-knowledge, secure computation, session-key distribution, protocols, electronic payment, one-way functions, trapdoor permutations, pseudorandom bit generators, hardcore bits.",
		"prerequisite": "CSE 202, CSE 200, and CSE 207 or consent of instructor."
	},
	{
		"name": "CSE 209A",
		"description": "Topics of special interest in algorithms, complexity, and logic to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "Topics",
		"description": "Topics of special interest in algorithms, complexity, and logic to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "Seminar in Algorithms, Complexity, and Logic",
		"description": "Topics of special interest in algorithms, complexity, and logic to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "CSE 209B",
		"description": "Topics of special interest in cryptography to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "Topics",
		"description": "Topics of special interest in cryptography to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "Seminar in Cryptography",
		"description": "Topics of special interest in cryptography to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "CSE 210",
		"description": "General principles in modern software engineering. Both theoretical and practical topics are covered. Theoretical topics include proofs of correctness, programming language semantics, and theory of testing. Practical topics include structured programming, modularization techniques, design of languages for reliable programming, and software tools.",
		"prerequisite": "CSE 100, 131A, 120, or consent of instructor."
	},
	{
		"name": "Principles of Software Engineering",
		"description": "General principles in modern software engineering. Both theoretical and practical topics are covered. Theoretical topics include proofs of correctness, programming language semantics, and theory of testing. Practical topics include structured programming, modularization techniques, design of languages for reliable programming, and software tools.",
		"prerequisite": "CSE 100, 131A, 120, or consent of instructor."
	},
	{
		"name": "CSE 211",
		"description": "Survey of testing and analysis methods. Introduction to advanced topics in area as well as traditional production methods. Topics include inspections and reviews, formal analysis, verification and validation standards, nonstatistical testing, statistical-testing and reliability models, coverage methods, testing and analysis tools, and organization management and planning. Methods special to special development approaches such as object-oriented testing will also be described.",
		"prerequisite": "Undergraduate major in computer science or extensive industrial experience."
	},
	{
		"name": "Software Testing and Analysis",
		"description": "Survey of testing and analysis methods. Introduction to advanced topics in area as well as traditional production methods. Topics include inspections and reviews, formal analysis, verification and validation standards, nonstatistical testing, statistical-testing and reliability models, coverage methods, testing and analysis tools, and organization management and planning. Methods special to special development approaches such as object-oriented testing will also be described.",
		"prerequisite": "Undergraduate major in computer science or extensive industrial experience."
	},
	{
		"name": "CSE 216",
		"description": "Prepares students to conduct original HCI research by reading and discussing seminal and cutting-edge research papers. Topics include design, social software, input techniques, mobile, and ubiquitous computing. Student pairs perform a quarter-long mini research project that leverages campus research efforts. Cross-listed with COGS 230.",
		"prerequisite": "None."
	},
	{
		"name": "Research Topics in Human-Computer Interaction",
		"description": "Prepares students to conduct original HCI research by reading and discussing seminal and cutting-edge research papers. Topics include design, social software, input techniques, mobile, and ubiquitous computing. Student pairs perform a quarter-long mini research project that leverages campus research efforts. Cross-listed with COGS 230.",
		"prerequisite": "None."
	},
	{
		"name": "CSE 218",
		"description": "This course will cover a current topic in software engineering in depth. Topics in the past have included software tools, impacts of programming language design, and software system structure.",
		"prerequisite": "None."
	},
	{
		"name": "Advanced Topics in Software Engineering",
		"description": "This course will cover a current topic in software engineering in depth. Topics in the past have included software tools, impacts of programming language design, and software system structure.",
		"prerequisite": "None."
	},
	{
		"name": "CSE 219",
		"description": "New societal challenges, cultural values, and technological opportunities are changing design—and vice versa. The seminar explores this increased scale, real-world engagement, and disruptive impact. Invited speakers from UC San Diego and beyond share cutting-edge research on interaction, design, and learning. Cross-listed with COGS 229.",
		"prerequisite": "None."
	},
	{
		"name": "Design at Large",
		"description": "New societal challenges, cultural values, and technological opportunities are changing design—and vice versa. The seminar explores this increased scale, real-world engagement, and disruptive impact. Invited speakers from UC San Diego and beyond share cutting-edge research on interaction, design, and learning. Cross-listed with COGS 229.",
		"prerequisite": "None."
	},
	{
		"name": "CSE 221",
		"description": "Operating system structures, concurrent computation models, scheduling, synchronization mechanisms, address spaces, memory management protection and security, buffering, streams, data-copying reduction techniques, file systems, naming, caching, disk organization, mapped files, remote file systems, case studies of major operating systems.",
		"prerequisite": "CSE 120 and 121, or consent of instructor."
	},
	{
		"name": "Operating Systems",
		"description": "Operating system structures, concurrent computation models, scheduling, synchronization mechanisms, address spaces, memory management protection and security, buffering, streams, data-copying reduction techniques, file systems, naming, caching, disk organization, mapped files, remote file systems, case studies of major operating systems.",
		"prerequisite": "CSE 120 and 121, or consent of instructor."
	},
	{
		"name": "CSE 222A",
		"description": "Computer communication network concepts, protocols, and architectures, with an emphasis on an analysis of algorithms, protocols, and design methodologies. Topics will include layering, error control, flow control, congestion control, switching and routing, quality of service management, mobility, naming, security, and selected contemporary topics.",
		"prerequisite": "CSE 123A or consent of instructor."
	},
	{
		"name": "Computer Communication Networks",
		"description": "Computer communication network concepts, protocols, and architectures, with an emphasis on an analysis of algorithms, protocols, and design methodologies. Topics will include layering, error control, flow control, congestion control, switching and routing, quality of service management, mobility, naming, security, and selected contemporary topics.",
		"prerequisite": "CSE 123A or consent of instructor."
	},
	{
		"name": "CSE 222B",
		"description": "Techniques for speeding up internet implementations, including system restructuring, new algorithms, and hardware innovations. Topics include models for protocols, systems and hardware; efficiency principles; applying these principles to deriving techniques for efficient implementation of common endnode and router functions.",
		"prerequisite": "CSE 123A or CSE 222A, or consent of instructor."
	},
	{
		"name": "Internet Algorithmics",
		"description": "Techniques for speeding up internet implementations, including system restructuring, new algorithms, and hardware innovations. Topics include models for protocols, systems and hardware; efficiency principles; applying these principles to deriving techniques for efficient implementation of common endnode and router functions.",
		"prerequisite": "CSE 123A or CSE 222A, or consent of instructor."
	},
	{
		"name": "CSE 223B",
		"description": "Efficient primitives for distributed operating systems and high-performance network servers, including concurrent and event-driven server architectures, remote procedure calls, and load shedding. Distributed naming, directory, and storage services, replication for fault tolerance, and security in distributed systems.",
		"prerequisite": "CSE 221, CSE 222A, or consent of instructor."
	},
	{
		"name": "Distributed Computing and Systems",
		"description": "Efficient primitives for distributed operating systems and high-performance network servers, including concurrent and event-driven server architectures, remote procedure calls, and load shedding. Distributed naming, directory, and storage services, replication for fault tolerance, and security in distributed systems.",
		"prerequisite": "CSE 221, CSE 222A, or consent of instructor."
	},
	{
		"name": "CSE 224",
		"description": "This course will provide a broad understanding of network design and implementation. Topics include techniques for building distributed applications, sockets programming, remote procedure calls , scale-out distributed directories, distributed consensus and state management, fault tolerance, networked storage, indirection, overlay networks, load balancing, and datacenter design.",
		"prerequisite": "Graduate standing or consent of instructor. This course is intended for MS students. PhD students may only take the course if they are not in systems/networking concentrations."
	},
	{
		"name": "Graduate Networked Systems",
		"description": "This course will provide a broad understanding of network design and implementation. Topics include techniques for building distributed applications, sockets programming, remote procedure calls , scale-out distributed directories, distributed consensus and state management, fault tolerance, networked storage, indirection, overlay networks, load balancing, and datacenter design.",
		"prerequisite": "Graduate standing or consent of instructor. This course is intended for MS students. PhD students may only take the course if they are not in systems/networking concentrations."
	},
	{
		"name": "CSE 227",
		"description": "Security and threat models, risk analysis, authentication and authorization, auditing, operating systems security, access control mechanisms, protection mechanisms, distributed systems/network security, security architecture, electronic commerce security mechanisms, security evaluation.",
		"prerequisite": "CSE 221 or consent of instructor."
	},
	{
		"name": "Computer Security",
		"description": "Security and threat models, risk analysis, authentication and authorization, auditing, operating systems security, access control mechanisms, protection mechanisms, distributed systems/network security, security architecture, electronic commerce security mechanisms, security evaluation.",
		"prerequisite": "CSE 221 or consent of instructor."
	},
	{
		"name": "CSE 229A",
		"description": "Discussion on problems of current research interest in computer systems. Possible areas of focus include distributed computing, computational grid, operating systems, fault-tolerant computing, storage systems, system services for the World Wide Web. Topics to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "Topics",
		"description": "Discussion on problems of current research interest in computer systems. Possible areas of focus include distributed computing, computational grid, operating systems, fault-tolerant computing, storage systems, system services for the World Wide Web. Topics to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "Seminar in Computer Systems",
		"description": "Discussion on problems of current research interest in computer systems. Possible areas of focus include distributed computing, computational grid, operating systems, fault-tolerant computing, storage systems, system services for the World Wide Web. Topics to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "CSE 229C",
		"description": "Discussion on problems of current research interest in computer security. Topics to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "Topics",
		"description": "Discussion on problems of current research interest in computer security. Topics to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "Seminar in Computer Security",
		"description": "Discussion on problems of current research interest in computer security. Topics to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "CSE 230",
		"description": "Functional versus imperative programming. Type systems and polymorphism; the ML language. Higher order functions, lazy evaluation. Abstract versus concrete syntax, structural and well-founded induction. The lambda calculus, reduction strategies, combinators. Denotational semantics, elementary domain theory.",
		"prerequisite": "CSE 130 or equivalent, or consent of instructor."
	},
	{
		"name": "Principles of Programming Languages",
		"description": "Functional versus imperative programming. Type systems and polymorphism; the ML language. Higher order functions, lazy evaluation. Abstract versus concrete syntax, structural and well-founded induction. The lambda calculus, reduction strategies, combinators. Denotational semantics, elementary domain theory.",
		"prerequisite": "CSE 130 or equivalent, or consent of instructor."
	},
	{
		"name": "CSE 231",
		"description": "Advanced material in programming languages and translator systems. Topics include compilers, code optimization, and debugging interpreters.",
		"prerequisite": "CSE 100, 131A–B, or consent of instructor."
	},
	{
		"name": "Advanced Compiler Design",
		"description": "Advanced material in programming languages and translator systems. Topics include compilers, code optimization, and debugging interpreters.",
		"prerequisite": "CSE 100, 131A–B, or consent of instructor."
	},
	{
		"name": "CSE 232",
		"description": "Database models including relational, hierarchic, and network approaches. Implementation of databases including query languages and system architectures.",
		"prerequisite": "CSE 100 or consent of instructor."
	},
	{
		"name": "Principles of Database Systems",
		"description": "Database models including relational, hierarchic, and network approaches. Implementation of databases including query languages and system architectures.",
		"prerequisite": "CSE 100 or consent of instructor."
	},
	{
		"name": "CSE 232B",
		"description": "A hands-on approach to the principles of databases implementation. Algebraic rewriters/optimizers, query processors, triggers. Beyond centralized relational databases.",
		"prerequisite": "CSE 232."
	},
	{
		"name": "Database System Implementation",
		"description": "A hands-on approach to the principles of databases implementation. Algebraic rewriters/optimizers, query processors, triggers. Beyond centralized relational databases.",
		"prerequisite": "CSE 232."
	},
	{
		"name": "CSE 233",
		"description": "Theory of databases. Theory of query languages, dependency theory, deductive databases, incomplete information, complex objects, object-oriented databases, and more. Connections to logic and complexity theory including finite model theory and descriptive complexity.",
		"prerequisite": "CSE 200."
	},
	{
		"name": "Database Theory",
		"description": "Theory of databases. Theory of query languages, dependency theory, deductive databases, incomplete information, complex objects, object-oriented databases, and more. Connections to logic and complexity theory including finite model theory and descriptive complexity.",
		"prerequisite": "CSE 200."
	},
	{
		"name": "CSE 237A",
		"description": "Embedded system technologies including processors, DSP, memory, and software. System interfacing basics, communication strategies, sensors, and actuators. Mobile and wireless technology in embedded systems. Using predesigned hardware and software components. Design case studies in wireless, multimedia, and/or networking domains.",
		"prerequisite": "Basic courses in digital hardware, algorithms and data structures, elementary calculus, and probability; or consent of instructor."
	},
	{
		"name": "Introduction to Embedded Computing",
		"description": "Embedded system technologies including processors, DSP, memory, and software. System interfacing basics, communication strategies, sensors, and actuators. Mobile and wireless technology in embedded systems. Using predesigned hardware and software components. Design case studies in wireless, multimedia, and/or networking domains.",
		"prerequisite": "Basic courses in digital hardware, algorithms and data structures, elementary calculus, and probability; or consent of instructor."
	},
	{
		"name": "CSE 237B",
		"description": "Embedded computing elements, device interfaces, time-critical IO handling. Embedded software design under size, performance, and reliability constraints. Software timing and functional validation. Programming methods and compilation for embeddable software. Embedded runtime systems. Case studies of real-time software systems.",
		"prerequisite": "CSE 237A; or basic courses in programming, algorithms and data structures, elementary calculus, discrete math, computer architecture; or consent of instructor."
	},
	{
		"name": "Software for Embedded Systems",
		"description": "Embedded computing elements, device interfaces, time-critical IO handling. Embedded software design under size, performance, and reliability constraints. Software timing and functional validation. Programming methods and compilation for embeddable software. Embedded runtime systems. Case studies of real-time software systems.",
		"prerequisite": "CSE 237A; or basic courses in programming, algorithms and data structures, elementary calculus, discrete math, computer architecture; or consent of instructor."
	},
	{
		"name": "CSE 237C",
		"description": "Embedded system building blocks including IP cores. Cosimulation. Formal verification using model checking. Verification environments. Test challenges in core integration: compliance, feature, random, and collision testing. Core access and test integration. Interface-based verification and standards.",
		"prerequisite": "CSE 237A; or basic courses in algorithms and data structures, elementary calculus, discrete math, symbolic logic, computer architecture; or consent of instructor."
	},
	{
		"name": "Validation and Testing of Embedded Systems",
		"description": "Embedded system building blocks including IP cores. Cosimulation. Formal verification using model checking. Verification environments. Test challenges in core integration: compliance, feature, random, and collision testing. Core access and test integration. Interface-based verification and standards.",
		"prerequisite": "CSE 237A; or basic courses in algorithms and data structures, elementary calculus, discrete math, symbolic logic, computer architecture; or consent of instructor."
	},
	{
		"name": "CSE 237D",
		"description": "System representation and modeling. Abstract and language models. Simulation as a modeling activity. Computational and hw/sw system prototypes. System analysis using models. Constraint and interface modeling. Behavioral compilation and synthesis.",
		"prerequisite": "CSE 237A; or basic courses in digital logic design, algorithms and data structures, elementary calculus, discrete math, symbolic logic, computer architecture; or consent of instructor."
	},
	{
		"name": "Design Automation and Prototyping for Embedded Systems",
		"description": "System representation and modeling. Abstract and language models. Simulation as a modeling activity. Computational and hw/sw system prototypes. System analysis using models. Constraint and interface modeling. Behavioral compilation and synthesis.",
		"prerequisite": "CSE 237A; or basic courses in digital logic design, algorithms and data structures, elementary calculus, discrete math, symbolic logic, computer architecture; or consent of instructor."
	},
	{
		"name": "CSE 239A",
		"description": "Discussion on problems of current research interest in databases. Possible areas of focus include core database issues, data management on the web, data integration, new database models and applications, formal methods in databases. Topics to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "Topics",
		"description": "Discussion on problems of current research interest in databases. Possible areas of focus include core database issues, data management on the web, data integration, new database models and applications, formal methods in databases. Topics to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "Seminar in Databases",
		"description": "Discussion on problems of current research interest in databases. Possible areas of focus include core database issues, data management on the web, data integration, new database models and applications, formal methods in databases. Topics to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "CSE 239B",
		"description": "Discussion on problems of current research interest in programming languages, formal methods, and software engineering. Possible areas of focus include program verification, program synthesis, language design and implementation, developer productivity tools, language-based security. Topics to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be taken for credit up to eighteen times for a maximum of eighteen units.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "Topics",
		"description": "Discussion on problems of current research interest in programming languages, formal methods, and software engineering. Possible areas of focus include program verification, program synthesis, language design and implementation, developer productivity tools, language-based security. Topics to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be taken for credit up to eighteen times for a maximum of eighteen units.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "Seminar in Programming Languages",
		"description": "Discussion on problems of current research interest in programming languages, formal methods, and software engineering. Possible areas of focus include program verification, program synthesis, language design and implementation, developer productivity tools, language-based security. Topics to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be taken for credit up to eighteen times for a maximum of eighteen units.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "CSE 240A",
		"description": "This course will cover fundamental concepts in computer architecture. Topics include instruction set architecture, pipelining, pipeline hazards, bypassing, dynamic scheduling, branch prediction, superscalar issue, memory-hierarchy design, advanced cache architectures, and multiprocessor architecture issues.",
		"prerequisite": "CSE 141 or consent of instructor."
	},
	{
		"name": "Principles of Computer Architecture",
		"description": "This course will cover fundamental concepts in computer architecture. Topics include instruction set architecture, pipelining, pipeline hazards, bypassing, dynamic scheduling, branch prediction, superscalar issue, memory-hierarchy design, advanced cache architectures, and multiprocessor architecture issues.",
		"prerequisite": "CSE 141 or consent of instructor."
	},
	{
		"name": "CSE 240B",
		"description": "This course covers advanced topics in parallel computer architecture, including on-chip and off-chip interconnection networks, cache coherence, cache consistency, hardware multithreading, multi-core and tiled architectures. It incorporates the latest research and development on parallel architectures and compilation techniques for those architectures. CSE 240A recommended.",
		"prerequisite": "Graduate standing."
	},
	{
		"name": "Parallel Computer Architecture",
		"description": "This course covers advanced topics in parallel computer architecture, including on-chip and off-chip interconnection networks, cache coherence, cache consistency, hardware multithreading, multi-core and tiled architectures. It incorporates the latest research and development on parallel architectures and compilation techniques for those architectures. CSE 240A recommended.",
		"prerequisite": "Graduate standing."
	},
	{
		"name": "CSE 240C",
		"description": "This course covers advanced topics in computer architecture. It incorporates the latest research and development on topics such as branch prediction, instruction-level parallelism, cache hierarchy design, speculative multithreading, reliable architectures, and power-management techniques. CSE 240A recommended.",
		"prerequisite": "Graduate standing."
	},
	{
		"name": "Advanced Microarchitecture",
		"description": "This course covers advanced topics in computer architecture. It incorporates the latest research and development on topics such as branch prediction, instruction-level parallelism, cache hierarchy design, speculative multithreading, reliable architectures, and power-management techniques. CSE 240A recommended.",
		"prerequisite": "Graduate standing."
	},
	{
		"name": "CSE 241A",
		"description": "VLSI integrated-circuit building blocks of computing systems, and their implementation. Computer-aided design and performance simulations, design exercises and projects. Devices, standard cells and interconnects, clocking, power/ground distribution, arithmetic modules, memories. Methodologies and tradeoffs in system implementation.",
		"prerequisite": "Layout  and logic design , or consent of instructor."
	},
	{
		"name": "ECE 260B",
		"description": "VLSI integrated-circuit building blocks of computing systems, and their implementation. Computer-aided design and performance simulations, design exercises and projects. Devices, standard cells and interconnects, clocking, power/ground distribution, arithmetic modules, memories. Methodologies and tradeoffs in system implementation.",
		"prerequisite": "Layout  and logic design , or consent of instructor."
	},
	{
		"name": "VLSI Integration of Computing Circuitry",
		"description": "VLSI integrated-circuit building blocks of computing systems, and their implementation. Computer-aided design and performance simulations, design exercises and projects. Devices, standard cells and interconnects, clocking, power/ground distribution, arithmetic modules, memories. Methodologies and tradeoffs in system implementation.",
		"prerequisite": "Layout  and logic design , or consent of instructor."
	},
	{
		"name": "CSE 243A",
		"description": "Hardware software codesign, architectural level synthesis, control synthesis and optimization, scheduling, binding, register and bus sharing, interconnect design, module selection, combinational logic optimization, state minimization, state encoding, and retiming.",
		"prerequisite": "None."
	},
	{
		"name": "Introduction to Synthesis Methodologies in VLSI CAD",
		"description": "Hardware software codesign, architectural level synthesis, control synthesis and optimization, scheduling, binding, register and bus sharing, interconnect design, module selection, combinational logic optimization, state minimization, state encoding, and retiming.",
		"prerequisite": "None."
	},
	{
		"name": "CSE 244A",
		"description": "Design for test, testing economics, defects, failures and faults, fault models, fault simulation, automatic test pattern generation, functional testing, memory, PLA, FPGA, microprocessor test, and fault diagnosis.",
		"prerequisite": "None."
	},
	{
		"name": "VLSI Test",
		"description": "Design for test, testing economics, defects, failures and faults, fault models, fault simulation, automatic test pattern generation, functional testing, memory, PLA, FPGA, microprocessor test, and fault diagnosis.",
		"prerequisite": "None."
	},
	{
		"name": "CSE 245",
		"description": "This course is about the computer algorithms, techniques, and theory used in the simulation and verification of electrical circuits.",
		"prerequisite": "CSE 241A or consent of instructor."
	},
	{
		"name": "Computer Aided Circuit Simulation and Verification",
		"description": "This course is about the computer algorithms, techniques, and theory used in the simulation and verification of electrical circuits.",
		"prerequisite": "CSE 241A or consent of instructor."
	},
	{
		"name": "CSE 248",
		"description": "Algorithmic techniques and optimization frameworks for large-scale, difficult optimizations. Primal-dual multicommodity flow approximations, approximations for geometric and graph Steiner formulations, continuous placement optimization, heuristics for Boolean satisfiability, multilevel methods, semidefinite programming, and application to other formulations .",
		"prerequisite": "CSE 241A or CSE 242A, or consent of instructor."
	},
	{
		"name": "Algorithmic and Optimization Foundations for VLSI CAD",
		"description": "Algorithmic techniques and optimization frameworks for large-scale, difficult optimizations. Primal-dual multicommodity flow approximations, approximations for geometric and graph Steiner formulations, continuous placement optimization, heuristics for Boolean satisfiability, multilevel methods, semidefinite programming, and application to other formulations .",
		"prerequisite": "CSE 241A or CSE 242A, or consent of instructor."
	},
	{
		"name": "CSE 249A",
		"description": "Topics of special interest in computer architecture to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "Topics",
		"description": "Topics of special interest in computer architecture to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "Seminar in Computer Architecture",
		"description": "Topics of special interest in computer architecture to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "CSE 249B",
		"description": "Topics of special interest in VLSI to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "Topics",
		"description": "Topics of special interest in VLSI to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "Seminar in VLSI",
		"description": "Topics of special interest in VLSI to be presented by faculty and students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "CSE 250A",
		"description": "Methods based on probability theory for reasoning and learning under uncertainty. Content may include directed and undirected probabilistic graphical models, exact and approximate inference, latent variables, expectation-maximization, hidden Markov models, Markov decision processes, applications to vision, robotics, speech, and/or text. Recommended preparation: CSE 103 or similar course.",
		"prerequisite": "Graduate standing in CSE or consent of instructor."
	},
	{
		"name": "Principles of Artificial Intelligence: Probabilistic Reasoning and Learning",
		"description": "Methods based on probability theory for reasoning and learning under uncertainty. Content may include directed and undirected probabilistic graphical models, exact and approximate inference, latent variables, expectation-maximization, hidden Markov models, Markov decision processes, applications to vision, robotics, speech, and/or text. Recommended preparation: CSE 103 or similar course.",
		"prerequisite": "Graduate standing in CSE or consent of instructor."
	},
	{
		"name": "CSE 251A",
		"description": "Algorithms for supervised and unsupervised learning from data. Content may include maximum likelihood; log-linear models, including logistic regression and conditional random fields; nearest neighbor methods; kernel methods; decision trees; ensemble methods; optimization algorithms; topic models; neural networks; and backpropagation. Renumbered from CSE 250B. Students may not receive credit for CSE 251A and CSE 250B. Recommended preparation: CSE 103 or similar course.",
		"prerequisite": "Graduate standing or consent of instructor."
	},
	{
		"name": "Principles of Machine Learning: Learning Algorithms",
		"description": "Algorithms for supervised and unsupervised learning from data. Content may include maximum likelihood; log-linear models, including logistic regression and conditional random fields; nearest neighbor methods; kernel methods; decision trees; ensemble methods; optimization algorithms; topic models; neural networks; and backpropagation. Renumbered from CSE 250B. Students may not receive credit for CSE 251A and CSE 250B. Recommended preparation: CSE 103 or similar course.",
		"prerequisite": "Graduate standing or consent of instructor."
	},
	{
		"name": "CSE 251B",
		"description": "This course covers Hopfield networks, application to optimization problems layered perceptrons, recurrent networks, and unsupervised learning. Programming exercises explore model behavior with a final project or exam on a cognitive science, artificial intelligence, or optimization problem of the student’s choice. Renumbered from CSE 253. Students may not receive credit for CSE 251B and CSE 253. Recommended preparation: Knowledge of C.",
		"prerequisite": "Graduate standing."
	},
	{
		"name": "Principles of Machine Learning: Neural Networks for Pattern Recognition",
		"description": "This course covers Hopfield networks, application to optimization problems layered perceptrons, recurrent networks, and unsupervised learning. Programming exercises explore model behavior with a final project or exam on a cognitive science, artificial intelligence, or optimization problem of the student’s choice. Renumbered from CSE 253. Students may not receive credit for CSE 251B and CSE 253. Recommended preparation: Knowledge of C.",
		"prerequisite": "Graduate standing."
	},
	{
		"name": "CSE 251C",
		"description": "Theoretical foundations of machine learning. Topics include concentration of measure, the PAC model, uniform convergence bounds, and VC dimension. Possible topics include online learning, learning with expert advice, multiarmed bandits, and boosting. Renumbered from CSE 250C. Students may not receive credit for CSE 251C and CSE 250C. Recommended preparation: CSE 103 and CSE 101 or similar course.",
		"prerequisite": "Graduate standing or consent of instructor."
	},
	{
		"name": "Principles of Machine Learning: Machine Learning Theory",
		"description": "Theoretical foundations of machine learning. Topics include concentration of measure, the PAC model, uniform convergence bounds, and VC dimension. Possible topics include online learning, learning with expert advice, multiarmed bandits, and boosting. Renumbered from CSE 250C. Students may not receive credit for CSE 251C and CSE 250C. Recommended preparation: CSE 103 and CSE 101 or similar course.",
		"prerequisite": "Graduate standing or consent of instructor."
	},
	{
		"name": "CSE 252A",
		"description": "Comprehensive introduction to computer vision providing broad coverage including low-level vision , inferring 3-D properties from images  and object recognition. Companion to CSE 252B covering complementary topics.",
		"prerequisite": "MATH 10D and MATH 20A–F or equivalent."
	},
	{
		"name": "Computer Vision I",
		"description": "Comprehensive introduction to computer vision providing broad coverage including low-level vision , inferring 3-D properties from images  and object recognition. Companion to CSE 252B covering complementary topics.",
		"prerequisite": "MATH 10D and MATH 20A–F or equivalent."
	},
	{
		"name": "CSE 252B",
		"description": "Comprehensive introduction to computer vision providing focused coverage of multiview geometry, structure from motion, image segmentation, motion segmentation, texture analysis and recognition, object detection, and image-based rendering. Companion to CSE 252A covering complementary topics.",
		"prerequisite": "MATH 10D and MATH 20A–F or equivalent."
	},
	{
		"name": "Computer Vision II",
		"description": "Comprehensive introduction to computer vision providing focused coverage of multiview geometry, structure from motion, image segmentation, motion segmentation, texture analysis and recognition, object detection, and image-based rendering. Companion to CSE 252A covering complementary topics.",
		"prerequisite": "MATH 10D and MATH 20A–F or equivalent."
	},
	{
		"name": "CSE 252C",
		"description": "Selected topics in computer vision and statistical pattern recognition, with an emphasis on recent developments. Possible topics include grouping and segmentation, object recognition and tracking, multiple view geometry, kernel-based methods, dimensionality reduction, and mixture models.",
		"prerequisite": "CSE 252 or equivalent and CSE 250B or equivalent."
	},
	{
		"name": "Selected Topics in Vision and Learning",
		"description": "Selected topics in computer vision and statistical pattern recognition, with an emphasis on recent developments. Possible topics include grouping and segmentation, object recognition and tracking, multiple view geometry, kernel-based methods, dimensionality reduction, and mixture models.",
		"prerequisite": "CSE 252 or equivalent and CSE 250B or equivalent."
	},
	{
		"name": "CSE 252D",
		"description": "This course covers advanced concepts in computer vision. Example topics include 3-D reconstruction, face recognition, object detection, semantic segmentation, action recognition, and domain adaptation. Consistent with recent developments, deep learning forms a significant fraction of the class. Lectures and assignments cover recent works on fundamental problems in computer vision, with the aim to prepare students for pursuing careers in the field. Recommended preparation: Completion of one of CSE 252A, 252B, 250A, or 250B is highly recommended.",
		"prerequisite": "Graduate standing."
	},
	{
		"name": "Advanced Computer Vision",
		"description": "This course covers advanced concepts in computer vision. Example topics include 3-D reconstruction, face recognition, object detection, semantic segmentation, action recognition, and domain adaptation. Consistent with recent developments, deep learning forms a significant fraction of the class. Lectures and assignments cover recent works on fundamental problems in computer vision, with the aim to prepare students for pursuing careers in the field. Recommended preparation: Completion of one of CSE 252A, 252B, 250A, or 250B is highly recommended.",
		"prerequisite": "Graduate standing."
	},
	{
		"name": "CSE 254",
		"description": "Learning algorithms based on statistics. Possible topics include minimum-variance unbiased estimators, maximum likelihood estimation, likelihood ratio tests, resampling methods, linear logistic regression, feature selection, regularization, dimensionality reduction, manifold detection. An upper-division undergraduate course on probability and statistics such as MATH 183 or 186, or any graduate course on statistics, pattern recognition, or machine learning is recommended.",
		"prerequisite": "Graduate standing."
	},
	{
		"name": "Statistical Learning",
		"description": "Learning algorithms based on statistics. Possible topics include minimum-variance unbiased estimators, maximum likelihood estimation, likelihood ratio tests, resampling methods, linear logistic regression, feature selection, regularization, dimensionality reduction, manifold detection. An upper-division undergraduate course on probability and statistics such as MATH 183 or 186, or any graduate course on statistics, pattern recognition, or machine learning is recommended.",
		"prerequisite": "Graduate standing."
	},
	{
		"name": "CSE 255",
		"description": "Learning methods for applications. Content may include data preparation, regression and classification algorithms, support vector machines, random forests, class imbalance, overfitting, decision theory, recommender systems and collaborative filtering, text mining, analyzing social networks and social media, protecting privacy, A/B testing. Recommended preparation: CSE 103 or similar.",
		"prerequisite": "Graduate standing or consent of instructor."
	},
	{
		"name": "Data Mining and Predictive Analytics",
		"description": "Learning methods for applications. Content may include data preparation, regression and classification algorithms, support vector machines, random forests, class imbalance, overfitting, decision theory, recommender systems and collaborative filtering, text mining, analyzing social networks and social media, protecting privacy, A/B testing. Recommended preparation: CSE 103 or similar.",
		"prerequisite": "Graduate standing or consent of instructor."
	},
	{
		"name": "CSE 256",
		"description": "An introduction to modern statistical approaches to natural language processing: part of speech tagging, word sense disambiguation and parsing, using Markov models, hidden Markov models, and probabilistic context-free grammars. Recommended preparation: LIGN 165, LIGN 245, CSE 151, CSE 250A, or CSE 254.",
		"prerequisite": "Graduate standing or consent of instructor."
	},
	{
		"name": "LING 256",
		"description": "An introduction to modern statistical approaches to natural language processing: part of speech tagging, word sense disambiguation and parsing, using Markov models, hidden Markov models, and probabilistic context-free grammars. Recommended preparation: LIGN 165, LIGN 245, CSE 151, CSE 250A, or CSE 254.",
		"prerequisite": "Graduate standing or consent of instructor."
	},
	{
		"name": "Statistical Natural Language Processing",
		"description": "An introduction to modern statistical approaches to natural language processing: part of speech tagging, word sense disambiguation and parsing, using Markov models, hidden Markov models, and probabilistic context-free grammars. Recommended preparation: LIGN 165, LIGN 245, CSE 151, CSE 250A, or CSE 254.",
		"prerequisite": "Graduate standing or consent of instructor."
	},
	{
		"name": "CSE 257",
		"description": "The course will cover core algorithms for sequential decision-making problems in autonomous systems. Topics include heuristic search, Monte Carlo search, deep reinforcement learning, nonlinear optimization, mixed-integer optimization, and stochastic optimization.",
		"prerequisite": "Graduate standing or consent of instructor."
	},
	{
		"name": "Search and Optimization",
		"description": "The course will cover core algorithms for sequential decision-making problems in autonomous systems. Topics include heuristic search, Monte Carlo search, deep reinforcement learning, nonlinear optimization, mixed-integer optimization, and stochastic optimization.",
		"prerequisite": "Graduate standing or consent of instructor."
	},
	{
		"name": "CSE 258",
		"description": "Current methods for data mining and predictive analytics. Emphasis is on studying real-world data sets, building working systems, and putting current ideas from machine learning research into practice. Recommended preparation: No previous background in machine learning is required, but students should be comfortable with programming , and with basic optimization and linear algebra.",
		"prerequisite": "Graduate standing."
	},
	{
		"name": "Recommender Systems and Web Mining",
		"description": "Current methods for data mining and predictive analytics. Emphasis is on studying real-world data sets, building working systems, and putting current ideas from machine learning research into practice. Recommended preparation: No previous background in machine learning is required, but students should be comfortable with programming , and with basic optimization and linear algebra.",
		"prerequisite": "Graduate standing."
	},
	{
		"name": "CSE 258A",
		"description": "Connectionist models and a sampling of other cognitive modeling techniques. Models of language processing, memory, sequential processes, and vision. Areas covered may vary depending on student and faculty interests. Can be repeated for credit. CSE 151 or CSE 250B or CSE 253 or CSE 254, or equivalent experience recommended.",
		"prerequisite": "Graduate standing."
	},
	{
		"name": "Cognitive Modeling",
		"description": "Connectionist models and a sampling of other cognitive modeling techniques. Models of language processing, memory, sequential processes, and vision. Areas covered may vary depending on student and faculty interests. Can be repeated for credit. CSE 151 or CSE 250B or CSE 253 or CSE 254, or equivalent experience recommended.",
		"prerequisite": "Graduate standing."
	},
	{
		"name": "CSE 259",
		"description": "A weekly meeting featuring local  speakers discussing their current research in artificial intelligence neural networks, and genetic algorithms.",
		"prerequisite": "None."
	},
	{
		"name": "Seminar in Artificial Intelligence",
		"description": "A weekly meeting featuring local  speakers discussing their current research in artificial intelligence neural networks, and genetic algorithms.",
		"prerequisite": "None."
	},
	{
		"name": "CSE 260",
		"description": "This course provides an overview of parallel hardware, algorithms, models, and software. Topics include Flynn’s taxonomy, interconnection networks, memory organization, a survey of commercially available multiprocessors, parallel algorithm paradigms and complexity criteria, parallel programming environments and tools for parallel debugging, language specification, mapping, performance, etc.",
		"prerequisite": "Graduate standing or consent of instructor."
	},
	{
		"name": "Parallel Computation",
		"description": "This course provides an overview of parallel hardware, algorithms, models, and software. Topics include Flynn’s taxonomy, interconnection networks, memory organization, a survey of commercially available multiprocessors, parallel algorithm paradigms and complexity criteria, parallel programming environments and tools for parallel debugging, language specification, mapping, performance, etc.",
		"prerequisite": "Graduate standing or consent of instructor."
	},
	{
		"name": "CSE 262",
		"description": "This course will explore design of software support for applications of parallel computation. Topics include programming languages, run time support, portability, and load balancing. The course will terminate in a project.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "System Support for Applications of Parallel Computation",
		"description": "This course will explore design of software support for applications of parallel computation. Topics include programming languages, run time support, portability, and load balancing. The course will terminate in a project.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "CSE 272",
		"description": "Computer graphics techniques for creating realistic images. Topics include ray tracing, global illumination, subsurface scattering, and participating media. CSE 168 or equivalent recommended.",
		"prerequisite": "None."
	},
	{
		"name": "Advanced Image Synthesis",
		"description": "Computer graphics techniques for creating realistic images. Topics include ray tracing, global illumination, subsurface scattering, and participating media. CSE 168 or equivalent recommended.",
		"prerequisite": "None."
	},
	{
		"name": "CSE 274",
		"description": "Selected topics in computer graphics, with an emphasis on recent developments. Possible topics include computer animation, shape modeling and analysis, image synthesis, appearance modeling, and real-time rendering. CSE 168 or CSE 169 recommended.",
		"prerequisite": "Graduate standing or consent of instructor."
	},
	{
		"name": "Selected Topics in Graphics",
		"description": "Selected topics in computer graphics, with an emphasis on recent developments. Possible topics include computer animation, shape modeling and analysis, image synthesis, appearance modeling, and real-time rendering. CSE 168 or CSE 169 recommended.",
		"prerequisite": "Graduate standing or consent of instructor."
	},
	{
		"name": "CSE 276A",
		"description": "This course provides an introduction to the fundamentals of robotics across kinematics, sensor systems, estimation, control, and planning. The contents include introduction to robotics in general, kinematics of robot systems, robot arm systems, sensors for robots, basic vision for robots, estimation methods, perception, robot localization and navigation, control of robot systems, robot motion planning, robot task planning, robot architectures, and evaluation of robot systems. It is expected that students have a solid understanding of linear algebra, can program in Python or C++, and have a basic understanding of methods for reasoning under uncertainty.",
		"prerequisite": "Graduate standing."
	},
	{
		"name": "Introduction to Robotics",
		"description": "This course provides an introduction to the fundamentals of robotics across kinematics, sensor systems, estimation, control, and planning. The contents include introduction to robotics in general, kinematics of robot systems, robot arm systems, sensors for robots, basic vision for robots, estimation methods, perception, robot localization and navigation, control of robot systems, robot motion planning, robot task planning, robot architectures, and evaluation of robot systems. It is expected that students have a solid understanding of linear algebra, can program in Python or C++, and have a basic understanding of methods for reasoning under uncertainty.",
		"prerequisite": "Graduate standing."
	},
	{
		"name": "CSE 276B",
		"description": "Robots are entering human spaces. How do we make them functional, useful, and acceptable? This course explores the core computational, engineering, and experimental challenges in human-robot interaction. Course topics include shared autonomy, perception of people and context, coordination, collaboration, human-guided learning, robot design, and experimental robotics. Students will review seminal and recent papers in the field and engage in team-based projects with physical, mobile robots. This class requires expertise in software development. Prior exposure to robotics, computer vision, or machine learning is recommended. Students should be comfortable reading and analyzing scientific papers at the graduate level. Students may not receive credit for CSE 276B and CSE 291  taught winter 2017 with the same subtitle.",
		"prerequisite": "Graduate standing."
	},
	{
		"name": "Human Robot Interaction",
		"description": "Robots are entering human spaces. How do we make them functional, useful, and acceptable? This course explores the core computational, engineering, and experimental challenges in human-robot interaction. Course topics include shared autonomy, perception of people and context, coordination, collaboration, human-guided learning, robot design, and experimental robotics. Students will review seminal and recent papers in the field and engage in team-based projects with physical, mobile robots. This class requires expertise in software development. Prior exposure to robotics, computer vision, or machine learning is recommended. Students should be comfortable reading and analyzing scientific papers at the graduate level. Students may not receive credit for CSE 276B and CSE 291  taught winter 2017 with the same subtitle.",
		"prerequisite": "Graduate standing."
	},
	{
		"name": "CSE 276C",
		"description": "The course will provide a comprehensive introduction to the key mathematical concepts used for modeling, implementing, and evaluation of robot systems. The course will use small home assignments tasks and a larger robot project to exercise the topics covered in class. The students should have a basic knowledge of mathematics and know one or more programming languages such as Python or MATLAB for completion of homework assignments.",
		"prerequisite": "Graduate standing."
	},
	{
		"name": "Mathematics for Robotics",
		"description": "The course will provide a comprehensive introduction to the key mathematical concepts used for modeling, implementing, and evaluation of robot systems. The course will use small home assignments tasks and a larger robot project to exercise the topics covered in class. The students should have a basic knowledge of mathematics and know one or more programming languages such as Python or MATLAB for completion of homework assignments.",
		"prerequisite": "Graduate standing."
	},
	{
		"name": "CSE 276D",
		"description": "Robotics has the potential to improve well-being for millions of people, support care givers, and aid the clinical workforce. This course brings together engineers, clinicians, and end-users to explore this exciting new field. It is project-based, interactive, and hands on, and involves working closely with stakeholders to develop prototypes that solve real-world problems. Students will explore the latest research in healthcare robotics, human-robot teaming, and health design. JSOE students should be comfortable building and experimenting within their area of expertise . Students with clinical backgrounds should be familiar with translational research methods. Students may not receive credit for CSE 276D and CSE 291  taught spring 2017 with the same subtitle. Program or materials fees may apply.",
		"prerequisite": "Graduate standing."
	},
	{
		"name": "Healthcare Robotics",
		"description": "Robotics has the potential to improve well-being for millions of people, support care givers, and aid the clinical workforce. This course brings together engineers, clinicians, and end-users to explore this exciting new field. It is project-based, interactive, and hands on, and involves working closely with stakeholders to develop prototypes that solve real-world problems. Students will explore the latest research in healthcare robotics, human-robot teaming, and health design. JSOE students should be comfortable building and experimenting within their area of expertise . Students with clinical backgrounds should be familiar with translational research methods. Students may not receive credit for CSE 276D and CSE 291  taught spring 2017 with the same subtitle. Program or materials fees may apply.",
		"prerequisite": "Graduate standing."
	},
	{
		"name": "CSE 276E",
		"description": "End to end system design of embedded electronic systems including PCB design and fabrication, software control system development, and system integration. Program or materials fees may apply. May be coscheduled with CSE 176E.",
		"prerequisite": "Instructor approval required to ensure sufficient programming and project experience to be successful in the course."
	},
	{
		"name": "Robot Systems Design and Implementation",
		"description": "End to end system design of embedded electronic systems including PCB design and fabrication, software control system development, and system integration. Program or materials fees may apply. May be coscheduled with CSE 176E.",
		"prerequisite": "Instructor approval required to ensure sufficient programming and project experience to be successful in the course."
	},
	{
		"name": "CSE 280A",
		"description": "The course focuses on algorithmic aspects of modern bioinformatics and covers the following topics: computational gene hunting, sequencing, DNA arrays, sequence comparison, pattern discovery in DNA, genome rearrangements, molecular evolution, computational proteomics, and others.",
		"prerequisite": "CSE 202 preferred or consent of instructor."
	},
	{
		"name": "Algorithms in Computational Biology",
		"description": "The course focuses on algorithmic aspects of modern bioinformatics and covers the following topics: computational gene hunting, sequencing, DNA arrays, sequence comparison, pattern discovery in DNA, genome rearrangements, molecular evolution, computational proteomics, and others.",
		"prerequisite": "CSE 202 preferred or consent of instructor."
	},
	{
		"name": "CSE 282",
		"description": "Introduction to methods for sequence analysis. Applications to genome and proteome sequences. Protein structure, sequence-structure analysis.",
		"prerequisite": "Pharm 201 or consent of instructor."
	},
	{
		"name": "BENG 202",
		"description": "Introduction to methods for sequence analysis. Applications to genome and proteome sequences. Protein structure, sequence-structure analysis.",
		"prerequisite": "Pharm 201 or consent of instructor."
	},
	{
		"name": "Bioinformatics II: Sequence and Structure Analysis—Methods and Applications",
		"description": "Introduction to methods for sequence analysis. Applications to genome and proteome sequences. Protein structure, sequence-structure analysis.",
		"prerequisite": "Pharm 201 or consent of instructor."
	},
	{
		"name": "CSE 283",
		"description": "Annotating genomes, characterizing functional genes, profiling, reconstructing pathways.",
		"prerequisite": "Pharm 201, BENG 202/CSE 282, or consent of instructor."
	},
	{
		"name": "BENG 203",
		"description": "Annotating genomes, characterizing functional genes, profiling, reconstructing pathways.",
		"prerequisite": "Pharm 201, BENG 202/CSE 282, or consent of instructor."
	},
	{
		"name": "Bioinformatics III: Functional Genomics",
		"description": "Annotating genomes, characterizing functional genes, profiling, reconstructing pathways.",
		"prerequisite": "Pharm 201, BENG 202/CSE 282, or consent of instructor."
	},
	{
		"name": "CSE 284",
		"description": "This course provides an introduction to bioinformatics techniques for analyzing and interpreting human genomes. Topics covered include an introduction to medical and population genetics, ancestry, finding and interpreting disease-causing variants, genome-wide association studies, genetic risk prediction, analyzing next-generation sequencing data, how to scale current genomics techniques to analyze hundreds of thousands of genomes, and the social impact of the personal genomics revolution. Programming experience, familiarity with the UNIX command line, and a basic course in probability and statistics are strongly recommended. Students may not receive credit for CSE 284 and CSE 291  taught winter 2017 with the same subtitle.",
		"prerequisite": "Graduate standing."
	},
	{
		"name": "Personal Genomics for Bioinformaticians",
		"description": "This course provides an introduction to bioinformatics techniques for analyzing and interpreting human genomes. Topics covered include an introduction to medical and population genetics, ancestry, finding and interpreting disease-causing variants, genome-wide association studies, genetic risk prediction, analyzing next-generation sequencing data, how to scale current genomics techniques to analyze hundreds of thousands of genomes, and the social impact of the personal genomics revolution. Programming experience, familiarity with the UNIX command line, and a basic course in probability and statistics are strongly recommended. Students may not receive credit for CSE 284 and CSE 291  taught winter 2017 with the same subtitle.",
		"prerequisite": "Graduate standing."
	},
	{
		"name": "CSE 290",
		"description": "A seminar course in which topics of special interest in computer science and engineering will be presented by staff members and graduate students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "Seminar in Computer Science and Engineering",
		"description": "A seminar course in which topics of special interest in computer science and engineering will be presented by staff members and graduate students under faculty direction. Topics vary from quarter to quarter. May be repeated for credit.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "CSE 291",
		"description": "Topics of special interest in computer science and engineering. Topics may vary from quarter to quarter. May be taken for credit nine times with the consent of instructor.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "Topics in Computer Science and Engineering",
		"description": "Topics of special interest in computer science and engineering. Topics may vary from quarter to quarter. May be taken for credit nine times with the consent of instructor.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "CSE 292",
		"description": "Computer science and engineering faculty will present one-hour seminars of the current research work in their areas of interest.",
		"prerequisite": "CSE graduate status."
	},
	{
		"name": "Faculty Research Seminar",
		"description": "Computer science and engineering faculty will present one-hour seminars of the current research work in their areas of interest.",
		"prerequisite": "CSE graduate status."
	},
	{
		"name": "CSE 293",
		"description": "The student will conceive, design, and execute a project in computer science under the direction of a faculty member. The project will typically include a large programming or hardware design task, but other types of projects are possible.",
		"prerequisite": "CSE graduate student status."
	},
	{
		"name": "Special Project in Computer Science and Engineering",
		"description": "The student will conceive, design, and execute a project in computer science under the direction of a faculty member. The project will typically include a large programming or hardware design task, but other types of projects are possible.",
		"prerequisite": "CSE graduate student status."
	},
	{
		"name": "CSE 294",
		"description": "Advanced study and analysis of active research in computer science and computer engineering. Discussion of current research and literature in the research specialty of the staff member teaching the course.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "Research Meeting in CSE",
		"description": "Advanced study and analysis of active research in computer science and computer engineering. Discussion of current research and literature in the research specialty of the staff member teaching the course.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "CSE 298",
		"description": "Open to properly qualified graduate students who wish to pursue a problem through advanced study under the direction of a member of the staff.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "Independent Study",
		"description": "Open to properly qualified graduate students who wish to pursue a problem through advanced study under the direction of a member of the staff.",
		"prerequisite": "Consent of instructor."
	},
	{
		"name": "CSE 299",
		"description": "Research.",
		"prerequisite": "Consent of faculty."
	},
	{
		"name": "Research",
		"description": "Research.",
		"prerequisite": "Consent of faculty."
	},
	{
		"name": "CSE 500",
		"description": "A course in which teaching assistants are aided in learning proper teaching methods by means of supervision of their work by the faculty: handling of discussions, preparation and grading of examinations and other written exercises, and student relations. May be used to meet teaching experience requirement for candidates for the PhD degree. Number of units for credit depends on number of hours devoted to class or section assistance.",
		"prerequisite": "Graduate standing and consent of instructor."
	},
	{
		"name": "Teaching Assistantship",
		"description": "A course in which teaching assistants are aided in learning proper teaching methods by means of supervision of their work by the faculty: handling of discussions, preparation and grading of examinations and other written exercises, and student relations. May be used to meet teaching experience requirement for candidates for the PhD degree. Number of units for credit depends on number of hours devoted to class or section assistance.",
		"prerequisite": "Graduate standing and consent of instructor."
	},
	{
		"name": "CSE 599",
		"description": "Training in teaching methods in the field of computer science. This course examines theoretical and practical communication and teaching techniques particularly appropriate to computer science.",
		"prerequisite": "Consent of faculty."
	},
	{
		"name": "Teaching Methods in Computer Science",
		"description": "Training in teaching methods in the field of computer science. This course examines theoretical and practical communication and teaching techniques particularly appropriate to computer science.",
		"prerequisite": "Consent of faculty."
	}
]